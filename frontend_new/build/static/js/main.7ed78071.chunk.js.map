{"version":3,"sources":["components/EmployeeTable.js","components/UserProfilePage.js","components/ManageDepartment.js","components/SettingsPage.js","components/ManageLeaveType.js","components/ManageEmployee.js","context/actions.js","context/reducer.js","context/context.js","components/NotificationsMenu.js","components/useDocumentTitle.js","components/ChangePassword.js","components/LeaveCalendarLeavesTable.js","components/LeaveCalendar.js","components/ManagerDashboard.js","components/ProtectedRoute.js","components/LeavesChart.js","components/EmployeeReportLeavesTable.js","components/EmployeeReport.js","components/DepartmentReport.js","components/LeaveTypeReport.js","components/ReportGeneration.js","components/AdminDashboard.js","components/LeavesTable.js","components/EmployeeDashboard.js","components/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["ApproveDialog","props","open","onClose","role","id","webSocket","fetchLeaves","handleClose","Dialog","DialogTitle","DialogActions","Button","color","onClick","console","log","requestOptions","method","headers","body","JSON","stringify","leave_id","fetch","then","res","json","data","admin","employee","manager","send","action","RejectDialog","TabPanel","children","value","index","other","hidden","aria-labelledby","Box","sx","p","a11yProps","EmployeeTable","approvedAdminLeaves","React","useState","page","setPage","rowsPerPage","setRowsPerPage","page0","setPage0","rowsPerPage0","setRowsPerPage0","page1","setPage1","rowsPerPage1","setRowsPerPage1","page2","setPage2","rowsPerPage2","setRowsPerPage2","approveDialog","setApproveDialog","rejectDialog","setrejectDialog","leaveID","setLeaveID","setValue","useEffect","leaves","filter","el","waiting_approval","manager_approved","handleApproveButton","e","handleRejectButton","width","marginTop","borderBottom","borderColor","Tabs","onChange","event","newValue","aria-label","Tab","label","TableContainer","component","Paper","Table","style","minWidth","TableHead","TableRow","TableCell","fontWeight","align","TableBody","slice","map","row","idx","is_online","FiberManualRecord","name","leave_type","applied_on","substr","from_date","to_date","paddingLeft","HourglassBottom","admin_approved","Done","Close","manager_rejected","ButtonGroup","variant","IconButton","ArrowForward","ClearOutlined","TableFooter","TablePagination","rowsPerPageOptions","count","length","onRowsPerPageChange","parseInt","target","onPageChange","newPage","UserProfilePage","Stack","spacing","alignSelf","alt","src","height","ManageDepartment","fetchDepartments","setOpen","departments","setDepartments","deptName","setDeptName","deptCode","setDeptCode","loading","setLoading","open2","setOpen2","editDeptCode","setEditDeptCode","response","resetFields","handleDeptNameChange","preventDefault","handleDeptCodeChange","container","item","xs","paddingBottom","paddingRight","DialogContent","TextField","type","fullWidth","dept_name","dept_code","fetchNumOfDepts","disabled","elevation","department","created_on","Edit","htmlColor","handleEditDept","SettingsPage","history","useHistory","push","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","leave_type_employee","ManageLeaveType","fetchLeaveTypes","open3","setOpen3","leaveTypes","setLeaveTypes","leaveTypeName","setLeaveTypeName","leaveTypeCode","setLeaveTypeCode","leaveTypeLimit","setLeaveTypeLimit","editLeaveTypeCode","setEditLeaveTypeCode","deleteLeaveTypeCode","setDeleteLeaveTypeCode","leaveTypeEmployee","setLeaveTypeEmployee","handleEditLeaveTypeButtonClose","handleLeaveTypeNameChange","handleLeaveTypeCodeChange","handleLeaveTypeLimitChange","FormControl","InputLabel","Select","labelId","multiple","split","renderValue","selected","join","Checkbox","checked","indexOf","primary","leave_type_name","leave_type_code","contract_based","includes","regular_based","limit","fetchNumOfLeaveTypes","leave","handleEditLeaveType","Delete","ManageEmployee","fetchEmployees","fetchAdmins","fetchManagers","WebSocket","onmessage","parse","onclose","error","state","setState","employees","setEmployees","firstName","setFirstName","lastName","setLastName","username","setUsername","empID","setEmpID","setDepartment","phoneNumber","setPhoneNumber","flat","setFlat","town","setTown","joiningDate","setJoiningDate","editUsername","setEditUsername","deleteUsername","setDeleteUsername","managers","setManagers","admins","setAdmins","setManager","setAdmin","employeeType","setEmployeeType","email","setEmail","setDisabled","resetAddEmployee","handleEditEmployeeButtonClose","handleEditEmployee","first_name","last_name","employee_id","department_code","phone_number","handleChange","handleChange2","display","marginRight","m","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","Divider","getStates","dob","toISOString","joining_date","contract","regular","fetchNumOfEmployees","online","loginUser","dispatch","loginPayload","a","user","response2","tokens","auth_access_token","access","auth_refresh_token","refresh","payload","localStorage","setItem","errors","logout","logoutPayload","removeItem","updateUser","updateUserPayload","getItem","initialState","access_token","refresh_token","errorMessage","AuthReducer","Error","AuthStateContext","createContext","AuthDispatchContext","useAuthState","context","useContext","undefined","useAuthDispatch","AuthProvider","useReducer","Provider","NotificationsMenu","anchorEl","handleNotificationsMenuClose","fetchNotifications","keepMounted","marginLeft","useDocumentTitle","title","defaultTitle","useRef","document","prevailOnUnmount","current","useStyles","makeStyles","textField","ChangePassword","classes","oldPassword","setOldPassword","showOldPassword","setShowOldPassword","newPassword","setNewPassword","showNewPassword","setShowNewPassword","confirmNewPassword","setConfirmNewPassword","showConfirmNewPassword","setShowConfirmNewPassword","setErrorMessage","successMessage","setSuccessMessage","marginBottom","required","className","InputProps","endAdornment","InputAdornment","position","tabIndex","onMouseDown","Visibility","VisibilityOff","old_password","new_password","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","LeaveCalendarLeavesTable","LeaveCalendar","leavesOnDate","setLeavesOnDate","flexDirection","date","theme","root","toolbar","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paper","fixedHeight","menuStyle","Gutter","w","h","mt","ml","backgroundColor","borderRadius","ManagerDashboard","notifications","setAnchorEl","isMenuOpen","setIsMenuOpen","numOfEmployees","setNumOfEmployees","numOfDepartments","setNumOfDepartments","numOfLeaveTypes","setNumOfLeaveTypes","isNotificationsOpen","setIsNotificationsOpen","setNotificaionsAnchorEl","setLeaves","allLeaves","setAllLeaves","fetchAllLeaves","handleLogoutClick","renderProfileMenu","Menu","transformOrigin","MenuItem","ListItemIcon","Settings","ListItemText","ExitToApp","CssBaseline","AppBar","clsx","Toolbar","edge","Typography","noWrap","currentTarget","aria-controls","aria-haspopup","Notifications","Badge","badgeContent","Avatar","charAt","Drawer","ChevronLeft","List","ListItem","button","Dashboard","Person","Business","icon","faLeaf","Container","maxWidth","path","exact","Grid","md","lg","Card","textAlign","CardContent","fontSize","ProtectedRoute","Component","rest","render","to","pathname","from","location","ChartJS","register","CategoryScale","LinearScale","ArcElement","BarElement","Title","Tooltip","Legend","LeavesChart","EmployeeReportLeavesTable","String","prototype","toRGB","hash","this","i","charCodeAt","rgb","EmployeeReport","loaded","totalLeavesByLeaveTypes","useMemo","ans","totalLeavesByStatus","accepted","rejected","CardHeader","labels","Object","keys","datasets","values","str","DepartmentReport","dept","numEmp","pieChartData","LeaveTypeReport","leaveType","fileDownload","require","filterBarContainer","gap","paddingTop","ReportGeneration","empLoaded","setEmpLoaded","empLoading","setEmpLoading","empLeaves","setEmpLeaves","empDetails","setEmpDetails","deptLoaded","setDeptLoaded","deptLoading","setDeptLoading","deptDetails","setDeptDetails","leaveTypeDetails","setLeaveTypeDetails","deptPieChartData","setDeptPieChartData","leaveTypePieChartData","setLeaveTypePieChartData","deptLeaves","setDeptLeaves","leaveTypesLoaded","setLeaveTypesLoaded","leaveTypesLoading","setLeaveTypesLoading","leaveTypesLeaves","setLeaveTypesLeaves","dateRange","setDateRange","handleEmpLoadingDone","handleDeptLoadingDone","handleLeaveTypesLoadingDone","leaveId","leaveIds","responseType","blob","catch","err","FormLabel","RadioGroup","FormControlLabel","control","Radio","DateRangePicker","startText","endText","startProps","endProps","Fragment","mx","_data","query_from","query_to","Date","FilterAlt","handleLoadingDone","AdminDashboard","setArea","LeavesTable","cancelLeaveID","setCancelLeaveID","handleCancelLeave","disableRipple","EmployeeDashboard","openTAL","setOpenTAL","openTLAM","setOpenTLAM","openTLAY","setOpenTLAY","setLeaveType","fromDate","setFromDate","toDate","setToDate","purpose","setPurpose","getAssignedNames","margin","multiline","rows","address_during_leave","leave_balance","leaves_month","leaves_total","Copyright","Link","href","avatar","palette","secondary","main","form","submit","LoginPage","CSRFToken","csrftoken","Cookies","get","password","setPassword","setRole","handleSubmitButton","is_employee","is_admin","handleSnackbarClose","noValidate","autoComplete","autoFocus","App","window","addEventListener","is_manager","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ed78071.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  TableFooter,\n  TablePagination,\n  TableContainer,\n  Paper,\n  Typography,\n  IconButton,\n  ButtonGroup,\n  Dialog,\n  DialogTitle,\n  Button,\n  DialogActions,\n  Box,\n  Tabs,\n  Tab,\n} from \"@mui/material\";\nimport {\n  ClearOutlined,\n  ArrowForward,\n  Close,\n  HourglassBottom,\n  Done,\n  FiberManualRecord,\n} from \"@mui/icons-material\";\n\nfunction ApproveDialog(props) {\n  const { open, onClose, role, id, webSocket, fetchLeaves } = props;\n\n  const handleApprove = () => {\n    // TODO: Go to database and change the status\n    console.log(\"Approving leave with ID \" + id);\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        leave_id: id,\n      }),\n    };\n\n    fetch(`http://127.0.0.1:8000/leaves/leave-${role}-approve/`, requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"sending request from admin\", {\n          admin: role === \"admin\" ? false : true,\n          employee: true,\n          manager: role === \"manager\" ? false : true,\n        });\n        fetchLeaves();\n        onClose();\n        webSocket.send(\n          JSON.stringify({\n            action: \"UPDATE\",\n            admin: role === \"admin\" ? false : true,\n            employee: true,\n            manager: role === \"manager\" ? false : true,\n          })\n        );\n      });\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>\n        {role === \"manager\" ? (\n          <Typography>Do you want to approve the Leave Application?</Typography>\n        ) : (\n          <Typography>\n            Do you want to forward the Leave Application to Manager?\n          </Typography>\n        )}\n      </DialogTitle>\n      <DialogActions>\n        <Button color=\"success\" onClick={handleApprove}>\n          {role === \"manager\" ? \"Approve\" : \"Forward\"}\n        </Button>\n        <Button color=\"warning\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction RejectDialog(props) {\n  const { open, onClose, role, id, webSocket, fetchLeaves } = props;\n\n  const handleReject = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        leave_id: id,\n      }),\n    };\n\n    fetch(`http://127.0.0.1:8000/leaves/leave-${role}-reject/`, requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        webSocket.send(\n          JSON.stringify({\n            action: \"UPDATE\",\n            employee: true,\n            admin: role === \"admin\" ? false : true,\n            manager: role === \"manager\" ? false : true,\n          })\n        );\n        fetchLeaves();\n        onClose();\n      });\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>\n        <Typography>Do you want to reject the Leave Application?</Typography>\n      </DialogTitle>\n      <DialogActions>\n        <Button color=\"error\" onClick={handleReject}>\n          Reject\n        </Button>\n        <Button color=\"warning\" onClick={handleClose}>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nfunction EmployeeTable(props) {\n  // let { user } = useAuthState();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [page0, setPage0] = React.useState(0);\n  const [rowsPerPage0, setRowsPerPage0] = React.useState(5);\n  const [page1, setPage1] = React.useState(0);\n  const [rowsPerPage1, setRowsPerPage1] = React.useState(5);\n  const [page2, setPage2] = React.useState(0);\n  const [rowsPerPage2, setRowsPerPage2] = React.useState(5);\n  const [approveDialog, setApproveDialog] = React.useState(false);\n  const [rejectDialog, setrejectDialog] = React.useState(false);\n  const [leaveID, setLeaveID] = useState(null);\n  const [value, setValue] = React.useState(0);\n  let waitingAdminLeaves;\n  // waitingManagerLeaves,\n  let approvedAdminLeaves;\n  // approvedManagerLeaves,\n  // rejectedAdminLeaves,\n  // rejectedManagerLeaves;\n\n  useEffect(() => {\n    waitingAdminLeaves = props.leaves.filter((el) => el.waiting_approval);\n    approvedAdminLeaves = props.leaves.filter((el) => el.manager_approved);\n    console.log(approvedAdminLeaves);\n    // console.log(props.leaves[1].id);\n  }, [props.leaves]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangePage0 = (event, newPage) => {\n    setPage0(newPage);\n  };\n\n  const handleChangePage1 = (event, newPage) => {\n    setPage1(newPage);\n  };\n\n  const handleChangePage2 = (event, newPage) => {\n    setPage2(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeRowsPerPage0 = (event) => {\n    setRowsPerPage0(parseInt(event.target.value, 10));\n    setPage0(0);\n  };\n\n  const handleChangeRowsPerPage1 = (event) => {\n    setRowsPerPage1(parseInt(event.target.value, 10));\n    setPage1(0);\n  };\n\n  const handleChangeRowsPerPage2 = (event) => {\n    setRowsPerPage2(parseInt(event.target.value, 10));\n    setPage2(0);\n  };\n\n  const handleApproveButton = (e) => {\n    setApproveDialog(true);\n  };\n\n  const handleRejectButton = (e) => {\n    setrejectDialog(true);\n  };\n\n  const handleClose = () => {\n    if (approveDialog) setApproveDialog(false);\n    if (rejectDialog) setrejectDialog(false);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\", marginTop: 10 }}>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab label=\"Waiting Applications\" {...a11yProps(0)} />\n          <Tab label=\"Accepted Applications\" {...a11yProps(1)} />\n          <Tab label=\"Rejected Applications\" {...a11yProps(2)} />\n          <Tab label=\"All Applications\" {...a11yProps(2)} />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: \"500px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n                  Employee Name\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Leave Type\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Applied On\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>From</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>To</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Admin</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Manager</TableCell>\n                {props.role === \"manager\" ? (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Approve/Reject\n                  </TableCell>\n                ) : (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Forward/Reject\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(rowsPerPage0 > 0\n                ? props.leaves.slice(\n                    page0 * rowsPerPage0,\n                    page0 * rowsPerPage0 + rowsPerPage0\n                  )\n                : props.leaves\n              ).map((row, idx) =>\n                props.role === \"admin\" && row.waiting_approval ? (\n                  <>\n                    <TableRow>\n                      <TableCell>{row.id}</TableCell>\n                      <TableCell align=\"left\">\n                        {row.is_online ? (\n                          <FiberManualRecord\n                            color=\"success\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        ) : (\n                          <FiberManualRecord\n                            color=\"disabled\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        )}\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.leave_type}</TableCell>\n                      <TableCell>{row.applied_on.substr(0, 10)}</TableCell>\n                      <TableCell>{row.from_date}</TableCell>\n                      <TableCell>{row.to_date}</TableCell>\n                      <TableCell style={{ paddingLeft: \"25px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : row.admin_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <Close color=\"error\" />\n                        )}\n                      </TableCell>\n                      <TableCell style={{ paddingLeft: \"32px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : !row.admin_approved ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_rejected ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <HourglassBottom color=\"warning\" />\n                        )}\n                      </TableCell>\n                      {props.role === \"manager\" ? (\n                        <TableCell align=\"center\">\n                          {!row.manager_rejected && !row.manager_approved ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"manager\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"manager\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Approved</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"center\">\n                          {row.waiting_approval ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"admin\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"admin\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Accepted</Typography>\n                          ) : row.manager_rejected ? (\n                            <Typography color=\"red\">Rejected</Typography>\n                          ) : row.admin_approved ? (\n                            <Typography color=\"green\">Forwarded</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  </>\n                ) : (\n                  props.role === \"manager\" &&\n                  !row.manager_approved &&\n                  !row.manager_rejected && (\n                    <TableRow>\n                      <TableCell>{row.id}</TableCell>\n                      <TableCell align=\"left\">\n                        {row.is_online ? (\n                          <FiberManualRecord\n                            color=\"success\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        ) : (\n                          <FiberManualRecord\n                            color=\"disabled\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        )}\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.leave_type}</TableCell>\n                      <TableCell>{row.applied_on.substr(0, 10)}</TableCell>\n                      <TableCell>{row.from_date}</TableCell>\n                      <TableCell>{row.to_date}</TableCell>\n                      <TableCell style={{ paddingLeft: \"25px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : row.admin_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <Close color=\"error\" />\n                        )}\n                      </TableCell>\n                      <TableCell style={{ paddingLeft: \"32px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : !row.admin_approved ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_rejected ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <HourglassBottom color=\"warning\" />\n                        )}\n                      </TableCell>\n                      {props.role === \"manager\" ? (\n                        <TableCell align=\"center\">\n                          {!row.manager_rejected && !row.manager_approved ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"manager\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"manager\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Approved</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"center\">\n                          {row.waiting_approval ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"admin\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"admin\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Accepted</Typography>\n                          ) : row.manager_rejected ? (\n                            <Typography color=\"red\">Rejected</Typography>\n                          ) : row.admin_approved ? (\n                            <Typography color=\"green\">Forwarded</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                )\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, { label: \"All\", value: -1 }]}\n                  count={props.leaves.length}\n                  rowsPerPage={rowsPerPage0}\n                  page={page0}\n                  onRowsPerPageChange={handleChangeRowsPerPage0}\n                  onPageChange={handleChangePage0}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: \"500px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n                  Employee Name\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Leave Type\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Applied On\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>From</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>To</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Admin</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Manager</TableCell>\n                {props.role === \"manager\" ? (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Approve/Reject\n                  </TableCell>\n                ) : (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Forward/Reject\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(rowsPerPage1 > 0\n                ? props.leaves.slice(\n                    page1 * rowsPerPage1,\n                    page1 * rowsPerPage1 + rowsPerPage1\n                  )\n                : props.leaves\n              ).map((row, idx) =>\n                props.role === \"admin\" && row.manager_approved ? (\n                  <>\n                    <TableRow>\n                      <TableCell>{row.id}</TableCell>\n                      <TableCell align=\"left\">\n                        {row.is_online ? (\n                          <FiberManualRecord\n                            color=\"success\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        ) : (\n                          <FiberManualRecord\n                            color=\"disabled\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        )}\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.leave_type}</TableCell>\n                      <TableCell>{row.applied_on.substr(0, 10)}</TableCell>\n                      <TableCell>{row.from_date}</TableCell>\n                      <TableCell>{row.to_date}</TableCell>\n                      <TableCell style={{ paddingLeft: \"25px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : row.admin_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <Close color=\"error\" />\n                        )}\n                      </TableCell>\n                      <TableCell style={{ paddingLeft: \"32px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : !row.admin_approved ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_rejected ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <HourglassBottom color=\"warning\" />\n                        )}\n                      </TableCell>\n                      {props.role === \"manager\" ? (\n                        <TableCell align=\"center\">\n                          {!row.manager_rejected && !row.manager_approved ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"manager\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"manager\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Approved</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"center\">\n                          {row.waiting_approval ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"admin\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"admin\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Accepted</Typography>\n                          ) : row.manager_rejected ? (\n                            <Typography color=\"red\">Rejected</Typography>\n                          ) : row.admin_approved ? (\n                            <Typography color=\"green\">Forwarded</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  </>\n                ) : (\n                  props.role === \"manager\" &&\n                  row.manager_approved && (\n                    <TableRow>\n                      <TableCell>{row.id}</TableCell>\n                      <TableCell align=\"left\">\n                        {row.is_online ? (\n                          <FiberManualRecord\n                            color=\"success\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        ) : (\n                          <FiberManualRecord\n                            color=\"disabled\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        )}\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.leave_type}</TableCell>\n                      <TableCell>{row.applied_on.substr(0, 10)}</TableCell>\n                      <TableCell>{row.from_date}</TableCell>\n                      <TableCell>{row.to_date}</TableCell>\n                      <TableCell style={{ paddingLeft: \"25px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : row.admin_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <Close color=\"error\" />\n                        )}\n                      </TableCell>\n                      <TableCell style={{ paddingLeft: \"32px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : !row.admin_approved ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_rejected ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <HourglassBottom color=\"warning\" />\n                        )}\n                      </TableCell>\n                      {props.role === \"manager\" ? (\n                        <TableCell align=\"center\">\n                          {!row.manager_rejected && !row.manager_approved ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"manager\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"manager\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Approved</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"center\">\n                          {row.waiting_approval ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"admin\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"admin\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Accepted</Typography>\n                          ) : row.manager_rejected ? (\n                            <Typography color=\"red\">Rejected</Typography>\n                          ) : row.admin_approved ? (\n                            <Typography color=\"green\">Forwarded</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                )\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, { label: \"All\", value: -1 }]}\n                  count={props.leaves.length}\n                  rowsPerPage={rowsPerPage1}\n                  page={page1}\n                  onRowsPerPageChange={handleChangeRowsPerPage1}\n                  onPageChange={handleChangePage1}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: \"500px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n                  Employee Name\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Leave Type\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Applied On\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>From</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>To</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Admin</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Manager</TableCell>\n                {props.role === \"manager\" ? (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Approve/Reject\n                  </TableCell>\n                ) : (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Forward/Reject\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(rowsPerPage2 > 0\n                ? props.leaves.slice(\n                    page2 * rowsPerPage2,\n                    page2 * rowsPerPage2 + rowsPerPage2\n                  )\n                : props.leaves\n              ).map((row, idx) =>\n                props.role === \"admin\" &&\n                (row.manager_rejected || !row.admin_approved) ? (\n                  <>\n                    <TableRow>\n                      <TableCell>{row.id}</TableCell>\n                      <TableCell align=\"left\">\n                        {row.is_online ? (\n                          <FiberManualRecord\n                            color=\"success\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        ) : (\n                          <FiberManualRecord\n                            color=\"disabled\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        )}\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.leave_type}</TableCell>\n                      <TableCell>{row.applied_on.substr(0, 10)}</TableCell>\n                      <TableCell>{row.from_date}</TableCell>\n                      <TableCell>{row.to_date}</TableCell>\n                      <TableCell style={{ paddingLeft: \"25px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : row.admin_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <Close color=\"error\" />\n                        )}\n                      </TableCell>\n                      <TableCell style={{ paddingLeft: \"32px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : !row.admin_approved ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_rejected ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <HourglassBottom color=\"warning\" />\n                        )}\n                      </TableCell>\n                      {props.role === \"manager\" ? (\n                        <TableCell align=\"center\">\n                          {!row.manager_rejected && !row.manager_approved ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"manager\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"manager\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Approved</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"center\">\n                          {row.waiting_approval ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"admin\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"admin\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Accepted</Typography>\n                          ) : row.manager_rejected ? (\n                            <Typography color=\"red\">Rejected</Typography>\n                          ) : row.admin_approved ? (\n                            <Typography color=\"green\">Forwarded</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  </>\n                ) : (\n                  props.role === \"manager\" &&\n                  row.manager_rejected && (\n                    <TableRow>\n                      <TableCell>{row.id}</TableCell>\n                      <TableCell align=\"left\">\n                        {row.is_online ? (\n                          <FiberManualRecord\n                            color=\"success\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        ) : (\n                          <FiberManualRecord\n                            color=\"disabled\"\n                            sx={\n                              {\n                                // width: 0.045,\n                                // height: 0.045,\n                              }\n                            }\n                          />\n                        )}\n                        {row.name}\n                      </TableCell>\n                      <TableCell>{row.leave_type}</TableCell>\n                      <TableCell>{row.applied_on.substr(0, 10)}</TableCell>\n                      <TableCell>{row.from_date}</TableCell>\n                      <TableCell>{row.to_date}</TableCell>\n                      <TableCell style={{ paddingLeft: \"25px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : row.admin_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <Close color=\"error\" />\n                        )}\n                      </TableCell>\n                      <TableCell style={{ paddingLeft: \"32px\" }}>\n                        {row.waiting_approval ? (\n                          <HourglassBottom color=\"warning\" />\n                        ) : !row.admin_approved ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_rejected ? (\n                          <Close color=\"error\" />\n                        ) : row.manager_approved ? (\n                          <Done color=\"success\" />\n                        ) : (\n                          <HourglassBottom color=\"warning\" />\n                        )}\n                      </TableCell>\n                      {props.role === \"manager\" ? (\n                        <TableCell align=\"center\">\n                          {!row.manager_rejected && !row.manager_approved ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"manager\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"manager\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Approved</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"center\">\n                          {row.waiting_approval ? (\n                            <ButtonGroup variant=\"contained\">\n                              <IconButton\n                                color=\"success\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleApproveButton();\n                                }}\n                              >\n                                <ArrowForward />\n                              </IconButton>\n                              <ApproveDialog\n                                open={approveDialog}\n                                onClose={handleClose}\n                                role=\"admin\"\n                                id={leaveID}\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                              <IconButton\n                                color=\"error\"\n                                onClick={() => {\n                                  setLeaveID(row.id);\n                                  handleRejectButton();\n                                }}\n                              >\n                                <ClearOutlined />\n                              </IconButton>\n                              <RejectDialog\n                                open={rejectDialog}\n                                onClose={handleClose}\n                                id={leaveID}\n                                role=\"admin\"\n                                webSocket={props.webSocket}\n                                fetchLeaves={props.fetchLeaves}\n                              />\n                            </ButtonGroup>\n                          ) : row.manager_approved ? (\n                            <Typography color=\"green\">Accepted</Typography>\n                          ) : row.manager_rejected ? (\n                            <Typography color=\"red\">Rejected</Typography>\n                          ) : row.admin_approved ? (\n                            <Typography color=\"green\">Forwarded</Typography>\n                          ) : (\n                            <Typography color=\"red\">Rejected</Typography>\n                          )}\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  )\n                )\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, { label: \"All\", value: -1 }]}\n                  count={props.leaves.length}\n                  rowsPerPage={rowsPerPage2}\n                  page={page2}\n                  onRowsPerPageChange={handleChangeRowsPerPage2}\n                  onPageChange={handleChangePage2}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <TableContainer component={Paper}>\n          <Table style={{ minWidth: \"500px\" }}>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n                  Employee Name\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Leave Type\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Applied On\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>From</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>To</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Admin</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Manager</TableCell>\n                {props.role === \"manager\" ? (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Approve/Reject\n                  </TableCell>\n                ) : (\n                  <TableCell style={{ fontWeight: \"bolder\" }}>\n                    Forward/Reject\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(rowsPerPage > 0\n                ? props.leaves.slice(\n                    page * rowsPerPage,\n                    page * rowsPerPage + rowsPerPage\n                  )\n                : props.leaves\n              ).map((row, idx) => (\n                <TableRow>\n                  <TableCell>{row.id}</TableCell>\n                  <TableCell align=\"left\">\n                    {row.is_online ? (\n                      <FiberManualRecord color=\"success\" />\n                    ) : (\n                      <FiberManualRecord color=\"disabled\" />\n                    )}\n                    {row.name}\n                  </TableCell>\n                  <TableCell>{row.leave_type}</TableCell>\n                  <TableCell>{row.applied_on.substr(0, 10)}</TableCell>\n                  <TableCell>{row.from_date}</TableCell>\n                  <TableCell>{row.to_date}</TableCell>\n                  <TableCell style={{ paddingLeft: \"25px\" }}>\n                    {row.waiting_approval ? (\n                      <HourglassBottom color=\"warning\" />\n                    ) : row.admin_approved ? (\n                      <Done color=\"success\" />\n                    ) : (\n                      <Close color=\"error\" />\n                    )}\n                  </TableCell>\n                  <TableCell style={{ paddingLeft: \"32px\" }}>\n                    {row.waiting_approval ? (\n                      <HourglassBottom color=\"warning\" />\n                    ) : !row.admin_approved ? (\n                      <Close color=\"error\" />\n                    ) : row.manager_rejected ? (\n                      <Close color=\"error\" />\n                    ) : row.manager_approved ? (\n                      <Done color=\"success\" />\n                    ) : (\n                      <HourglassBottom color=\"warning\" />\n                    )}\n                  </TableCell>\n                  {props.role === \"manager\" ? (\n                    <TableCell align=\"center\">\n                      {!row.manager_rejected && !row.manager_approved ? (\n                        <ButtonGroup variant=\"contained\">\n                          <IconButton\n                            color=\"success\"\n                            onClick={() => {\n                              setLeaveID(row.id);\n                              handleApproveButton();\n                            }}\n                          >\n                            <ArrowForward />\n                          </IconButton>\n                          <ApproveDialog\n                            open={approveDialog}\n                            onClose={handleClose}\n                            role=\"manager\"\n                            id={leaveID}\n                            webSocket={props.webSocket}\n                            fetchLeaves={props.fetchLeaves}\n                          />\n                          <IconButton\n                            color=\"error\"\n                            onClick={() => {\n                              setLeaveID(row.id);\n                              handleRejectButton();\n                            }}\n                          >\n                            <ClearOutlined />\n                          </IconButton>\n                          <RejectDialog\n                            open={rejectDialog}\n                            onClose={handleClose}\n                            id={leaveID}\n                            role=\"manager\"\n                            webSocket={props.webSocket}\n                            fetchLeaves={props.fetchLeaves}\n                          />\n                        </ButtonGroup>\n                      ) : row.manager_approved ? (\n                        <Typography color=\"green\">Approved</Typography>\n                      ) : (\n                        <Typography color=\"red\">Rejected</Typography>\n                      )}\n                    </TableCell>\n                  ) : (\n                    <TableCell align=\"center\">\n                      {row.waiting_approval ? (\n                        <ButtonGroup variant=\"contained\">\n                          <IconButton\n                            color=\"success\"\n                            onClick={() => {\n                              setLeaveID(row.id);\n                              handleApproveButton();\n                            }}\n                          >\n                            <ArrowForward />\n                          </IconButton>\n                          <ApproveDialog\n                            open={approveDialog}\n                            onClose={handleClose}\n                            role=\"admin\"\n                            id={leaveID}\n                            webSocket={props.webSocket}\n                            fetchLeaves={props.fetchLeaves}\n                          />\n                          <IconButton\n                            color=\"error\"\n                            onClick={() => {\n                              setLeaveID(row.id);\n                              handleRejectButton();\n                            }}\n                          >\n                            <ClearOutlined />\n                          </IconButton>\n                          <RejectDialog\n                            open={rejectDialog}\n                            onClose={handleClose}\n                            id={leaveID}\n                            role=\"admin\"\n                            webSocket={props.webSocket}\n                            fetchLeaves={props.fetchLeaves}\n                          />\n                        </ButtonGroup>\n                      ) : row.manager_approved ? (\n                        <Typography color=\"green\">Accepted</Typography>\n                      ) : row.manager_rejected ? (\n                        <Typography color=\"red\">Rejected</Typography>\n                      ) : row.admin_approved ? (\n                        <Typography color=\"green\">Forwarded</Typography>\n                      ) : (\n                        <Typography color=\"red\">Rejected</Typography>\n                      )}\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, { label: \"All\", value: -1 }]}\n                  count={props.leaves.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onRowsPerPageChange={handleChangeRowsPerPage}\n                  onPageChange={handleChangePage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </TabPanel>\n    </Box>\n  );\n}\n\nexport default EmployeeTable;\n","import React from \"react\";\nimport { Avatar, Stack, Typography, IconButton } from \"@mui/material\";\n\nfunction UserProfilePage() {\n  return (\n    <div>\n      <Stack spacing={2}>\n        <div style={{ alignSelf: \"center\" }}>\n          <IconButton>\n            <Avatar\n              alt=\"Avinash Kumar\"\n              src=\"https://scontent.fmaa8-1.fna.fbcdn.net/v/t1.6435-9/103782454_804215123443464_8638898312476848541_n.jpg?_nc_cat=107&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=bU_UglI1TnsAX_zrnQT&_nc_ht=scontent.fmaa8-1.fna&oh=e8c20ddaa4954a3e85d237f8becafc09&oe=61A46415\"\n              sx={{\n                width: 200,\n                height: 200,\n              }}\n            />\n          </IconButton>\n          <Typography variant=\"h5\" component=\"h5\">\n            Username: avi1152\n          </Typography>\n        </div>\n        <div></div>\n      </Stack>\n    </div>\n  );\n}\n\nexport default UserProfilePage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  TextField,\n  Paper,\n  Grid,\n  Typography,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableHead,\n  Box,\n  TableRow,\n  Stack,\n  TableCell,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  IconButton,\n} from \"@mui/material\";\nimport { deprecatedPropType, DialogContent } from \"@material-ui/core\";\nimport { Edit } from \"@mui/icons-material\";\n\nfunction ManageDepartment(props) {\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n\n  const [open, setOpen] = useState(false);\n  const [departments, setDepartments] = useState([]);\n  const [deptName, setDeptName] = useState(\"\");\n  const [deptCode, setDeptCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [open2, setOpen2] = useState(false);\n  const [editDeptCode, setEditDeptCode] = useState(\"\");\n\n  const fetchDepartments = () => {\n    return fetch(\"http://127.0.0.1:8000/dept/add-dept\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDepartments([...data]);\n      });\n  };\n\n  const handleAddDeptButton = () => {\n    setOpen(true);\n  };\n\n  const handleAddDept = () => {\n    setLoading(true);\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        dept_name: deptName,\n        dept_code: deptCode,\n      }),\n    };\n    fetch(\"http://127.0.0.1:8000/dept/add-dept\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        fetchDepartments();\n        props.fetchNumOfDepts();\n        setOpen(false);\n        resetFields();\n        setLoading(false);\n      });\n  };\n\n  const handleEditDept = () => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        dept_name: deptName,\n        dept_code: deptCode,\n      }),\n    };\n    fetch(\n      `http://127.0.0.1:8000/dept/update-dept/${editDeptCode}`,\n      requestOptions\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        fetchDepartments();\n      });\n    setOpen2(false);\n    setDeptName(\"\");\n    setDeptCode(\"\");\n  };\n\n  const resetFields = () => {\n    setDeptName(\"\");\n    setDeptCode(\"\");\n  };\n\n  const handleClose = () => {\n    setOpen2(false);\n    setOpen(false);\n    resetFields();\n  };\n\n  const handleDeptNameChange = (e) => {\n    e.preventDefault();\n    setDeptName(e.target.value);\n  };\n\n  const handleDeptCodeChange = (e) => {\n    e.preventDefault();\n    setDeptCode(e.target.value);\n  };\n\n  return (\n    <>\n      <Grid container spacing={0} sx={{ width: 1600 }}>\n        <Grid item xs={4}>\n          <Typography variant=\"h4\">Departments</Typography>\n        </Grid>\n        <Grid item xs={4}></Grid>\n        <Grid item xs={4}>\n          <Button variant=\"outlined\" onClick={handleAddDeptButton}>\n            Add Department\n          </Button>\n          <Dialog open={open} onClose={handleClose}>\n            <Box\n              sx={{\n                width: 600,\n                paddingBottom: 2,\n                paddingLeft: 1,\n                paddingRight: 1,\n              }}\n            >\n              <DialogTitle>Add Department</DialogTitle>\n              <DialogContent>\n                <form>\n                  <Stack spacing={3}>\n                    <TextField\n                      id=\"dept_name\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Department Name\"\n                      value={deptName}\n                      onChange={handleDeptNameChange}\n                    />\n                    <TextField\n                      id=\"dept_code\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Department Code\"\n                      value={deptCode}\n                      onChange={handleDeptCodeChange}\n                    />\n                  </Stack>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color=\"primary\"\n                  onClick={handleAddDept}\n                  disabled={loading}\n                >\n                  Add\n                </Button>\n                <Button color=\"error\" onClick={handleClose}>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Box>\n          </Dialog>\n        </Grid>\n      </Grid>\n      <Paper elevation={1} sx={{ marginTop: 6 }}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Department Name\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Department Code\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Created On\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Edit</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {departments.map((department, idx) => (\n                <TableRow>\n                  <TableCell>{idx + 1}</TableCell>\n                  <TableCell>{department.dept_name}</TableCell>\n                  <TableCell>{department.dept_code}</TableCell>\n                  <TableCell>{department.created_on.substr(0, 10)}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      onClick={() => {\n                        setDeptName(department.dept_name);\n                        setDeptCode(department.dept_code);\n                        setEditDeptCode(department.dept_code);\n                        setOpen2(true);\n                      }}\n                    >\n                      <Edit htmlColor=\"yellow\" />\n                    </IconButton>\n                    <Dialog open={open2} onClose={handleClose}>\n                      <Box\n                        sx={{\n                          width: 600,\n                          paddingBottom: 2,\n                          paddingLeft: 1,\n                          paddingRight: 1,\n                        }}\n                      >\n                        <DialogTitle>Edit Department</DialogTitle>\n                        <DialogContent>\n                          <form>\n                            <Stack spacing={3}>\n                              <TextField\n                                id=\"dept_name2\"\n                                type=\"text\"\n                                fullWidth\n                                variant=\"standard\"\n                                label=\"Department Name\"\n                                value={deptName}\n                                onChange={handleDeptNameChange}\n                              />\n                              <TextField\n                                id=\"dept_code2\"\n                                type=\"text\"\n                                fullWidth\n                                variant=\"standard\"\n                                label=\"Department Code\"\n                                value={deptCode}\n                                onChange={handleDeptCodeChange}\n                              />\n                            </Stack>\n                          </form>\n                        </DialogContent>\n                        <DialogActions>\n                          <Button\n                            color=\"primary\"\n                            onClick={() => {\n                              handleEditDept();\n                            }}\n                          >\n                            Edit\n                          </Button>\n                          <Button\n                            color=\"error\"\n                            onClick={() => {\n                              setOpen2(false);\n                              setDeptName(\"\");\n                              setDeptCode(\"\");\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                        </DialogActions>\n                      </Box>\n                    </Dialog>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n}\n\nexport default ManageDepartment;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction SettingsPage({ role }) {\n  let history = useHistory();\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          history.push(`/${role}/change-password`);\n        }}\n      >\n        Change Password\n      </Button>\n    </>\n  );\n}\n\nexport default SettingsPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  TextField,\n  Paper,\n  Grid,\n  Typography,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableHead,\n  Box,\n  TableRow,\n  Stack,\n  TableCell,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  IconButton,\n  ButtonGroup,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  ListItemText,\n  Select,\n  Checkbox,\n} from \"@mui/material\";\nimport { Edit, Delete, Done, Close } from \"@mui/icons-material\";\nimport { DialogContent } from \"@material-ui/core\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst leave_type_employee = [\"Contract Based\", \"Regular Based\"];\n\nfunction ManageLeaveType(props) {\n  useEffect(() => {\n    fetchLeaveTypes();\n  }, []);\n\n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n  const [open3, setOpen3] = useState(false);\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [leaveTypeName, setLeaveTypeName] = useState(\"\");\n  const [leaveTypeCode, setLeaveTypeCode] = useState(\"\");\n  const [leaveTypeLimit, setLeaveTypeLimit] = useState(\"\");\n  const [editLeaveTypeCode, setEditLeaveTypeCode] = useState(\"\");\n  const [deleteLeaveTypeCode, setDeleteLeaveTypeCode] = useState(\"\");\n  const [leaveTypeEmployee, setLeaveTypeEmployee] = useState([]);\n\n  const fetchLeaveTypes = () => {\n    fetch(\"http://127.0.0.1:8000/leave-types/add-leave-type\")\n      .then((response) => response.json())\n      .then((data) => {\n        setLeaveTypes([...data]);\n      });\n  };\n\n  const handleAddLeaveTypeButton = () => {\n    setOpen(true);\n  };\n\n  const handleEditLeaveTypeButtonClose = () => {\n    setOpen2(false);\n    setLeaveTypeCode(\"\");\n    setLeaveTypeName(\"\");\n    setLeaveTypeLimit(\"\");\n  };\n\n  const resetFields = () => {\n    setLeaveTypeName(\"\");\n    setLeaveTypeCode(\"\");\n    setLeaveTypeLimit(\"\");\n    setLeaveTypeEmployee([]);\n  };\n\n  const handleAddLeaveType = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        leave_type_name: leaveTypeName,\n        leave_type_code: leaveTypeCode,\n        contract_based: leaveTypeEmployee.includes(\"Contract Based\"),\n        regular_based: leaveTypeEmployee.includes(\"Regular Based\"),\n        limit: leaveTypeLimit,\n      }),\n    };\n    fetch(\"http://127.0.0.1:8000/leave-types/add-leave-type\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        fetchLeaveTypes();\n        props.fetchNumOfLeaveTypes();\n      });\n    setOpen(false);\n    resetFields();\n  };\n\n  const handleDeleteLeaveType = () => {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    fetch(\n      `http://127.0.0.1:8000/leave-types/delete-leave-types/${deleteLeaveTypeCode}`,\n      requestOptions\n    ).then(() => {\n      fetchLeaveTypes();\n      props.fetchNumOfLeaveTypes();\n    });\n    setOpen3(false);\n    setLeaveTypeName(\"\");\n    setLeaveTypeCode(\"\");\n    setLeaveTypeLimit(\"\");\n  };\n\n  const handleEditLeaveType = () => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        leave_type_name: leaveTypeName,\n        leave_type_code: leaveTypeCode,\n        limit: leaveTypeLimit,\n      }),\n    };\n    fetch(\n      `http://127.0.0.1:8000/leave-types/update-leave-type/${editLeaveTypeCode}`,\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        fetchLeaveTypes();\n      });\n    setOpen2(false);\n    setLeaveTypeName(\"\");\n    setLeaveTypeCode(\"\");\n    setLeaveTypeLimit(\"\");\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setOpen2(false);\n    setOpen3(false);\n    resetFields();\n  };\n\n  const handleLeaveTypeNameChange = (e) => {\n    e.preventDefault();\n    setLeaveTypeName(e.target.value);\n  };\n\n  const handleLeaveTypeCodeChange = (e) => {\n    e.preventDefault();\n    setLeaveTypeCode(e.target.value);\n  };\n\n  const handleLeaveTypeLimitChange = (e) => {\n    e.preventDefault();\n    setLeaveTypeLimit(e.target.value);\n  };\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setLeaveTypeEmployee(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n\n  return (\n    <>\n      <Grid container spacing={0} sx={{ width: 1600 }}>\n        <Grid item xs={4}>\n          <Typography variant=\"h4\">Leave Types</Typography>\n        </Grid>\n        <Grid item xs={4}></Grid>\n        <Grid item xs={4}>\n          <Button variant=\"outlined\" onClick={handleAddLeaveTypeButton}>\n            Add Leave Type\n          </Button>\n          <Dialog open={open} onClose={handleClose}>\n            <Box\n              sx={{\n                width: 600,\n                paddingBottom: 2,\n                paddingLeft: 1,\n                paddingRight: 1,\n              }}\n            >\n              <DialogTitle>Add Leave Type</DialogTitle>\n              <DialogContent>\n                <form>\n                  <Stack spacing={3}>\n                    <TextField\n                      id=\"leave_type_name\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Leave Type Name\"\n                      value={leaveTypeName}\n                      onChange={handleLeaveTypeNameChange}\n                    />\n                    <TextField\n                      id=\"leave_type_code\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Leave Type Code\"\n                      value={leaveTypeCode}\n                      onChange={handleLeaveTypeCodeChange}\n                    />\n                    <TextField\n                      id=\"leave_type_limit\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Leave Type Limit\"\n                      value={leaveTypeLimit}\n                      onChange={handleLeaveTypeLimitChange}\n                    />\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-multiple-checkbox-label\">\n                        Applicable Employee Type\n                      </InputLabel>\n                      <Select\n                        labelId=\"demo-multiple-checkbox-label\"\n                        id=\"demo-multiple-checkbox\"\n                        multiple\n                        value={leaveTypeEmployee}\n                        onChange={handleChange}\n                        renderValue={(selected) => selected.join(\", \")}\n                        MenuProps={MenuProps}\n                        fullWidth\n                        label={\"Applicable Employee Type\"}\n                      >\n                        {leave_type_employee.map((name) => (\n                          <MenuItem key={name} value={name}>\n                            <Checkbox\n                              checked={leaveTypeEmployee.indexOf(name) > -1}\n                            />\n                            <ListItemText primary={name} />\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </Stack>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button color=\"primary\" onClick={handleAddLeaveType}>\n                  Add\n                </Button>\n                <Button color=\"error\" onClick={handleClose}>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Box>\n          </Dialog>\n        </Grid>\n      </Grid>\n      <Paper elevation={1} sx={{ marginTop: 6 }}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Leave Type Name\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Leave Type Code\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Regular Employees\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Contract Employees\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>Rule</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Created On\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Edit/Remove\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {leaveTypes.map((leave, idx) => (\n                <TableRow>\n                  <TableCell>{idx + 1}</TableCell>\n                  <TableCell>{leave.leave_type_name}</TableCell>\n                  <TableCell style={{ paddingLeft: \"60px\" }}>\n                    {leave.leave_type_code}\n                  </TableCell>\n                  <TableCell style={{ paddingLeft: \"60px\" }}>\n                    {leave.regular_based ? (\n                      <Done color=\"success\" />\n                    ) : (\n                      <Close color=\"error\" />\n                    )}\n                  </TableCell>\n                  <TableCell style={{ paddingLeft: \"60px\" }}>\n                    {leave.contract_based ? (\n                      <Done color=\"success\" />\n                    ) : (\n                      <Close color=\"error\" />\n                    )}\n                  </TableCell>\n                  <TableCell>{leave.limit}</TableCell>\n                  <TableCell>{leave.created_on.substr(0, 10)}</TableCell>\n                  <TableCell>\n                    <ButtonGroup>\n                      <IconButton\n                        onClick={() => {\n                          setLeaveTypeName(leave.leave_type_name);\n                          setLeaveTypeCode(leave.leave_type_code);\n                          setLeaveTypeLimit(leave.limit);\n                          setEditLeaveTypeCode(leave.leave_type_code);\n                          setOpen2(true);\n                        }}\n                      >\n                        <Edit htmlColor=\"yellow\" />\n                      </IconButton>\n                      <Dialog open={open2} onClose={handleClose}>\n                        <Box\n                          sx={{\n                            width: 600,\n                            paddingBottom: 2,\n                            paddingLeft: 1,\n                            paddingRight: 1,\n                          }}\n                        >\n                          <DialogTitle>Edit Leave Type</DialogTitle>\n                          <DialogContent>\n                            <form>\n                              <Stack spacing={3}>\n                                <TextField\n                                  id=\"leave_type_name2\"\n                                  type=\"text\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Leave Type Name\"\n                                  value={leaveTypeName}\n                                  onChange={handleLeaveTypeNameChange}\n                                />\n                                <TextField\n                                  id=\"leave_type_code2\"\n                                  type=\"text\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Leave Type Code\"\n                                  value={leaveTypeCode}\n                                  onChange={handleLeaveTypeCodeChange}\n                                />\n                                <TextField\n                                  id=\"leave_type_limit2\"\n                                  type=\"text\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Leave Type Limit\"\n                                  value={leaveTypeLimit}\n                                  onChange={handleLeaveTypeLimitChange}\n                                />\n                              </Stack>\n                            </form>\n                          </DialogContent>\n                          <DialogActions>\n                            <Button\n                              color=\"primary\"\n                              onClick={() => {\n                                handleEditLeaveType();\n                              }}\n                            >\n                              Edit\n                            </Button>\n                            <Button\n                              color=\"error\"\n                              onClick={handleEditLeaveTypeButtonClose}\n                            >\n                              Cancel\n                            </Button>\n                          </DialogActions>\n                        </Box>\n                      </Dialog>\n                      <IconButton\n                        onClick={() => {\n                          setDeleteLeaveTypeCode(leave.leave_type_code);\n                          setOpen3(true);\n                        }}\n                      >\n                        <Delete color=\"error\" />\n                      </IconButton>\n                      <Dialog onClose={handleClose} open={open3}>\n                        <DialogTitle>\n                          <Typography>\n                            Do you want to delete this Leave Type?\n                          </Typography>\n                        </DialogTitle>\n                        <DialogActions>\n                          <Button\n                            color=\"error\"\n                            onClick={() => {\n                              handleDeleteLeaveType();\n                            }}\n                          >\n                            Delete\n                          </Button>\n                          <Button color=\"warning\" onClick={handleClose}>\n                            Cancel\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                    </ButtonGroup>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n}\n\nexport default ManageLeaveType;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  TextField,\n  Paper,\n  Grid,\n  Typography,\n  Button,\n  TableContainer,\n  Table,\n  TableBody,\n  TableHead,\n  Box,\n  TableRow,\n  Stack,\n  TableCell,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  IconButton,\n  ButtonGroup,\n  MenuItem,\n} from \"@mui/material\";\nimport { Edit, Delete, FiberManualRecord } from \"@mui/icons-material\";\nimport { DialogContent, Divider } from \"@material-ui/core\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { getStates } from \"country-state-picker\";\nimport { Select, InputLabel, FormControl } from \"@mui/material\";\n\nlet webSocket;\n\nfunction ManageEmployee(props) {\n  // const { user } = useAuthState();\n\n  useEffect(() => {\n    fetchEmployees();\n    fetchAdmins();\n    fetchManagers();\n    fetchDepartments();\n    webSocket = new WebSocket(\"ws://127.0.0.1:8000/ws/update-user\");\n    webSocket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      if (data.action === \"UPDATE\") {\n        if (data.admin || data.manager) {\n          fetchEmployees();\n        }\n      }\n    };\n    webSocket.onclose = function (e) {\n      console.error(\"Chat socket closed unexpectedly\");\n    };\n  }, []);\n\n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n  const [open3, setOpen3] = useState(false);\n  const [value, setValue] = React.useState(null);\n  const [state, setState] = useState(null);\n  const [employees, setEmployees] = useState([]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [empID, setEmpID] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [departments, setDepartments] = useState([]);\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [flat, setFlat] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [joiningDate, setJoiningDate] = useState(null);\n  const [editUsername, setEditUsername] = useState(\"\");\n  const [deleteUsername, setDeleteUsername] = useState(\"\");\n  const [managers, setManagers] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [manager, setManager] = useState(\"\");\n  const [admin, setAdmin] = useState(\"\");\n  const [employeeType, setEmployeeType] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  const fetchEmployees = () => {\n    fetch(\"http://127.0.0.1:8000/accounts/register/employee\")\n      .then((response) => response.json())\n      .then((data) => {\n        setEmployees([...data]);\n      });\n  };\n\n  const fetchManagers = () => {\n    fetch(\"http://127.0.0.1:8000/accounts/get-managers/\")\n      .then((res) => res.json())\n      .then((data) => {\n        setManagers([...data]);\n      });\n  };\n\n  const fetchAdmins = () => {\n    fetch(\"http://127.0.0.1:8000/accounts/get-admins/\")\n      .then((res) => res.json())\n      .then((data) => {\n        setAdmins([...data]);\n      });\n  };\n\n  const fetchDepartments = () => {\n    return fetch(\"http://127.0.0.1:8000/dept/add-dept\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDepartments([...data]);\n      });\n  };\n\n  const handleAddEmployeeButton = () => {\n    setOpen(true);\n  };\n\n  const resetAddEmployee = () => {\n    setOpen(false);\n    setValue(null);\n    setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setManager(\"\");\n    setAdmin(\"\");\n    setEmployeeType(\"\");\n    setEmpID(\"\");\n    setDepartment(\"\");\n    setPhoneNumber(\"\");\n    setFlat(\"\");\n    setTown(\"\");\n    setJoiningDate(null);\n  };\n\n  const handleAddEmployee = () => {\n    setDisabled(true);\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        first_name: firstName,\n        last_name: lastName,\n        employee_id: empID,\n        dob: value.toISOString().slice(0, 10),\n        department_code: department,\n        phone_number: phoneNumber,\n        joining_date: joiningDate.toISOString().slice(0, 10),\n        flat: flat,\n        town: town,\n        state: state,\n        manager: manager,\n        admin: admin,\n        email: email,\n        contract: employeeType === \"contract\",\n        regular: employeeType === \"regular\",\n      }),\n    };\n\n    fetch(\"http://127.0.0.1:8000/accounts/register/employee\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        fetchEmployees();\n        resetAddEmployee();\n        props.fetchNumOfEmployees();\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setOpen2(false);\n    setOpen3(false);\n    resetAddEmployee();\n  };\n\n  const handleEditEmployeeButtonClose = () => {\n    setOpen2(false);\n    setValue(null);\n    setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmpID(\"\");\n    setDepartment(\"\");\n    setPhoneNumber(\"\");\n    setFlat(\"\");\n    setTown(\"\");\n    setJoiningDate(null);\n  };\n\n  const handleEditEmployee = () => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        first_name: firstName,\n        last_name: lastName,\n        employee_id: empID,\n        department_code: department,\n        phone_number: phoneNumber,\n        flat: flat,\n        town: town,\n        state: state,\n      }),\n    };\n\n    fetch(\n      `http://127.0.0.1:8000/accounts/update/${editUsername}`,\n      requestOptions\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        fetchEmployees();\n      });\n    setOpen2(false);\n    setValue(null);\n    setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmpID(\"\");\n    setDepartment(\"\");\n    setPhoneNumber(\"\");\n    setFlat(\"\");\n    setTown(\"\");\n    setJoiningDate(null);\n  };\n\n  const handleDeleteEmployee = () => {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    fetch(\n      `http://127.0.0.1:8000/accounts/delete/${deleteUsername}`,\n      requestOptions\n    ).then(() => {\n      fetchEmployees();\n      props.fetchNumOfEmployees();\n      props.fetchLeaves();\n    });\n    setOpen3(false);\n    // setDeleteUsername(\"\");\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"employee_first_name\")\n      setFirstName(event.target.value);\n    else if (event.target.id === \"employee_last_name\")\n      setLastName(event.target.value);\n    else if (event.target.id === \"employee_username\")\n      setUsername(event.target.value);\n    else if (event.target.id === \"employee_id\") setEmpID(event.target.value);\n    else if (event.target.id === \"employee_department_code\")\n      setDepartment(event.target.value);\n    else if (event.target.id === \"employee_number\")\n      setPhoneNumber(event.target.value);\n    else if (event.target.id === \"employee_flat\") setFlat(event.target.value);\n    else if (event.target.id === \"employee_town\") setTown(event.target.value);\n    else if (event.target.id === \"employee_email\") setEmail(event.target.value);\n    else setState(event.target.value);\n  };\n\n  const handleChange2 = (event) => {\n    if (event.target.id === \"employee_first_name2\")\n      setFirstName(event.target.value);\n    else if (event.target.id === \"employee_last_name2\")\n      setLastName(event.target.value);\n    else if (event.target.id === \"employee_username2\")\n      setUsername(event.target.value);\n    else if (event.target.id === \"employee_id2\") setEmpID(event.target.value);\n    else if (event.target.id === \"employee_department_code2\")\n      setDepartment(event.target.value);\n    else if (event.target.id === \"employee_number2\")\n      setPhoneNumber(event.target.value);\n    else if (event.target.id === \"employee_flat2\") setFlat(event.target.value);\n    else if (event.target.id === \"employee_town2\") setTown(event.target.value);\n    else setState(event.target.value);\n  };\n\n  return (\n    <>\n      <Grid container spacing={0} sx={{ width: 1600 }}>\n        <Grid item xs={4}>\n          <Typography variant=\"h4\">Employee Data</Typography>\n        </Grid>\n        <Grid item xs={4}></Grid>\n        <Grid item xs={4}>\n          <Button variant=\"outlined\" onClick={handleAddEmployeeButton}>\n            Add Employee\n          </Button>\n          <Dialog open={open} onClose={handleClose}>\n            <Box\n              sx={{\n                width: 600,\n                paddingBottom: 2,\n                paddingLeft: 1,\n                paddingRight: 1,\n              }}\n            >\n              <DialogTitle>Add Employee</DialogTitle>\n              <DialogContent>\n                <form>\n                  <Stack spacing={3}>\n                    <div\n                      style={{\n                        display: \"flex\",\n                      }}\n                    >\n                      <TextField\n                        id=\"employee_first_name\"\n                        type=\"text\"\n                        variant=\"standard\"\n                        label=\"First Name\"\n                        style={{ marginRight: 15 }}\n                        value={firstName}\n                        onChange={handleChange}\n                      />\n                      <TextField\n                        id=\"employee_last_name\"\n                        type=\"text\"\n                        variant=\"standard\"\n                        label=\"Last Name\"\n                        value={lastName}\n                        onChange={handleChange}\n                      />\n                    </div>\n                    <TextField\n                      id=\"employee_username\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Employee Username\"\n                      value={username}\n                      onChange={handleChange}\n                    />\n                    <TextField\n                      id=\"employee_email\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Employee Email\"\n                      value={email}\n                      onChange={handleChange}\n                    />\n                    <TextField\n                      id=\"employee_id\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Employee ID\"\n                      value={empID}\n                      onChange={handleChange}\n                    />\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"employee-department-helper-label\">\n                        Employee Department\n                      </InputLabel>\n                      <Select\n                        labelId=\"employee-department-helper-label\"\n                        id=\"employee-department-helper\"\n                        value={department}\n                        label=\"Employee Department\"\n                        onChange={(e) => setDepartment(e.target.value)}\n                      >\n                        {departments.map((department, idx) => (\n                          <MenuItem key={idx} value={department.dept_code}>\n                            {department.dept_name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DatePicker\n                        label=\"Date of Birth\"\n                        value={value}\n                        onChange={(newValue) => {\n                          setValue(newValue);\n                        }}\n                        renderInput={(params) => <TextField {...params} />}\n                      />\n                    </LocalizationProvider>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                      <DatePicker\n                        label=\"Joining Date\"\n                        value={joiningDate}\n                        onChange={(newValue) => {\n                          setJoiningDate(newValue);\n                        }}\n                        renderInput={(params) => <TextField {...params} />}\n                      />\n                    </LocalizationProvider>\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"employee-helper-label\">\n                        Employee Type\n                      </InputLabel>\n                      <Select\n                        labelId=\"employee-helper-label\"\n                        id=\"employee-helper\"\n                        value={employeeType}\n                        label=\"Employee Type\"\n                        onChange={(e) => setEmployeeType(e.target.value)}\n                      >\n                        <MenuItem value=\"regular\">Regular Employee</MenuItem>\n                        <MenuItem value=\"contract\">Contract Employee</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <TextField\n                      id=\"employee_number\"\n                      type=\"tel\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Employee Phone Number\"\n                      value={phoneNumber}\n                      onChange={handleChange}\n                    />\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"admin-helper-label\">\n                        Assign Admin\n                      </InputLabel>\n                      <Select\n                        labelId=\"admin-helper-label\"\n                        id=\"admin-helper\"\n                        value={admin}\n                        label=\"Assign Admin\"\n                        onChange={(e) => setAdmin(e.target.value)}\n                      >\n                        {admins.map((admin) => (\n                          <MenuItem value={admin.username}>\n                            {admin.first_name + \" \" + admin.last_name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"manager-helper-label\">\n                        Assign Manager\n                      </InputLabel>\n                      <Select\n                        labelId=\"manager-helper-label\"\n                        id=\"manager-helper\"\n                        value={manager}\n                        label=\"Assign Manager\"\n                        onChange={(e) => setManager(e.target.value)}\n                      >\n                        {managers.map((manager) => (\n                          <MenuItem value={manager.username}>\n                            {manager.first_name + \" \" + manager.last_name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                    <Divider />\n                    <Typography>Address</Typography>\n                    <TextField\n                      id=\"employee_flat\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Flat, House no., Building, Company, Apartment\"\n                      value={flat}\n                      onChange={handleChange}\n                    />\n                    <TextField\n                      id=\"employee_town\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Town/City\"\n                      value={town}\n                      onChange={handleChange}\n                    />\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"state-helper-label\">State</InputLabel>\n                      <Select\n                        labelId=\"state-helper-label\"\n                        id=\"state-helper\"\n                        value={state}\n                        label=\"State\"\n                        onChange={handleChange}\n                      >\n                        {/* <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem> */}\n                        {getStates(\"in\").map((state, idx) => {\n                          return <MenuItem value={state}>{state}</MenuItem>;\n                        })}\n                      </Select>\n                    </FormControl>\n                    {/* TODO */}\n                    {/* Joining Date DatePicker */}\n                  </Stack>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  color=\"primary\"\n                  onClick={handleAddEmployee}\n                  disabled={disabled}\n                >\n                  Add\n                </Button>\n                <Button color=\"error\" onClick={handleClose}>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Box>\n          </Dialog>\n        </Grid>\n      </Grid>\n      <Paper elevation={1} sx={{ marginTop: 6 }}>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Employee Name\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Employee Type\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Employee ID\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Employee Department\n                </TableCell>\n                <TableCell style={{ fontWeight: \"bolder\" }}>\n                  Edit/Remove\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {employees.map((employee, idx) => (\n                <TableRow>\n                  <TableCell>{idx + 1}</TableCell>\n                  <TableCell>\n                    {employee.online ? (\n                      <FiberManualRecord\n                        color=\"success\"\n                        sx={\n                          {\n                            // width: 0.045,\n                            // height: 0.045,\n                          }\n                        }\n                      />\n                    ) : (\n                      <FiberManualRecord\n                        color=\"disabled\"\n                        sx={\n                          {\n                            // width: 0.045,\n                            // height: 0.045,\n                          }\n                        }\n                      />\n                    )}\n                    {employee.first_name + \" \" + employee.last_name}\n                  </TableCell>\n                  <TableCell>\n                    {employee.contract_based ? \"Contract\" : \"Regular\"}\n                  </TableCell>\n                  <TableCell>{employee.employee_id}</TableCell>\n                  <TableCell>{employee.department_code}</TableCell>\n                  <TableCell>\n                    <ButtonGroup>\n                      <IconButton\n                        disabled={employee.disabled}\n                        onClick={() => {\n                          setValue(employee.dob);\n                          setUsername(employee.username);\n                          setFirstName(employee.first_name);\n                          setLastName(employee.last_name);\n                          setEmpID(employee.employee_id);\n                          setDepartment(employee.department_code);\n                          setPhoneNumber(employee.phone_number);\n                          setFlat(employee.flat);\n                          setTown(employee.town);\n                          setJoiningDate(employee.joining_date);\n                          setState(employee.state);\n                          setEditUsername(employee.username);\n                          setOpen2(true);\n                        }}\n                      >\n                        <Edit\n                          htmlColor=\"yellow\"\n                          sx={{\n                            color: employee.disabled ? \"gray\" : \"yellow\",\n                          }}\n                        />\n                      </IconButton>\n                      <Dialog open={open2} onClose={handleClose}>\n                        <Box\n                          sx={{\n                            width: 600,\n                            paddingBottom: 2,\n                            paddingLeft: 1,\n                            paddingRight: 1,\n                          }}\n                        >\n                          <DialogTitle>Add Employee</DialogTitle>\n                          <DialogContent>\n                            <form>\n                              <Stack spacing={3}>\n                                <div\n                                  style={{\n                                    display: \"flex\",\n                                  }}\n                                >\n                                  <TextField\n                                    id=\"employee_first_name2\"\n                                    type=\"text\"\n                                    variant=\"standard\"\n                                    label=\"First Name\"\n                                    style={{ marginRight: 15 }}\n                                    value={firstName}\n                                    onChange={handleChange2}\n                                  />\n                                  <TextField\n                                    id=\"employee_last_name2\"\n                                    type=\"text\"\n                                    variant=\"standard\"\n                                    label=\"Last Name\"\n                                    value={lastName}\n                                    onChange={handleChange2}\n                                  />\n                                </div>\n                                <TextField\n                                  id=\"employee_id2\"\n                                  type=\"text\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Employee ID\"\n                                  value={empID}\n                                  onChange={handleChange2}\n                                />\n                                <TextField\n                                  id=\"employee_department_code2\"\n                                  type=\"text\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Employee Department\"\n                                  value={department}\n                                  onChange={handleChange2}\n                                />\n                                <TextField\n                                  id=\"employee_number2\"\n                                  type=\"tel\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Employee Phone Number\"\n                                  value={phoneNumber}\n                                  onChange={handleChange2}\n                                />\n                                <Divider />\n                                <Typography>Address</Typography>\n                                <TextField\n                                  id=\"employee_flat2\"\n                                  type=\"text\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Flat, House no., Building, Company, Apartment\"\n                                  value={flat}\n                                  onChange={handleChange2}\n                                />\n                                <TextField\n                                  id=\"employee_town2\"\n                                  type=\"text\"\n                                  fullWidth\n                                  variant=\"standard\"\n                                  label=\"Town/City\"\n                                  value={town}\n                                  onChange={handleChange2}\n                                />\n                                <FormControl sx={{ m: 1, minWidth: 120 }}>\n                                  <InputLabel id=\"state-helper-label2\">\n                                    State\n                                  </InputLabel>\n                                  <Select\n                                    labelId=\"state-helper-label2\"\n                                    id=\"state-helper2\"\n                                    value={state}\n                                    label=\"State\"\n                                    onChange={handleChange2}\n                                  >\n                                    {getStates(\"in\").map((state, idx) => {\n                                      return (\n                                        <MenuItem value={state}>\n                                          {state}\n                                        </MenuItem>\n                                      );\n                                    })}\n                                  </Select>\n                                </FormControl>\n                              </Stack>\n                            </form>\n                          </DialogContent>\n                          <DialogActions>\n                            <Button\n                              color=\"primary\"\n                              onClick={handleEditEmployee}\n                            >\n                              Edit\n                            </Button>\n                            <Button\n                              color=\"error\"\n                              onClick={handleEditEmployeeButtonClose}\n                            >\n                              Cancel\n                            </Button>\n                          </DialogActions>\n                        </Box>\n                      </Dialog>\n                      <IconButton\n                        disabled={employee.disabled}\n                        onClick={() => {\n                          setDeleteUsername(employee.username);\n                          setOpen3(true);\n                        }}\n                      >\n                        <Delete\n                          color=\"error\"\n                          sx={{\n                            color: employee.disabled ? \"gray\" : \"red\",\n                          }}\n                        />\n                      </IconButton>\n                      <Dialog onClose={handleClose} open={open3}>\n                        <DialogTitle>\n                          <Typography>\n                            Do you want to remove this Employee?\n                          </Typography>\n                        </DialogTitle>\n                        <DialogActions>\n                          <Button\n                            color=\"error\"\n                            onClick={() => {\n                              handleDeleteEmployee();\n                            }}\n                          >\n                            Delete\n                          </Button>\n                          <Button color=\"warning\" onClick={handleClose}>\n                            Cancel\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                    </ButtonGroup>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n}\n\nexport default ManageEmployee;\n","export async function loginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      ...loginPayload,\n    }),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_LOGIN\" });\n    let response = await fetch(\n      \"http://127.0.0.1:8000/accounts/login/\",\n      requestOptions\n    );\n    let data = await response.json();\n\n    if (data.user) {\n      let response2 = await fetch(\n        \"http://127.0.0.1:8000/accounts/token/\",\n        requestOptions\n      );\n      let tokens = await response2.json();\n      data = {\n        ...data,\n        auth_access_token: tokens.access,\n        auth_refresh_token: tokens.refresh,\n      };\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: data });\n      localStorage.setItem(\"currentUser\", JSON.stringify(data));\n      return data;\n    }\n    dispatch({ type: \"LOGIN_ERROR\", error: data.errors[0] });\n    return data;\n  } catch (error) {\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\n  }\n}\n\nexport async function logout(dispatch, logoutPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      ...logoutPayload,\n    }),\n  };\n\n  fetch(\"http://127.0.0.1:8000/accounts/logout/\", requestOptions)\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({ type: \"LOGOUT\" });\n      localStorage.removeItem(\"currentUser\");\n      localStorage.removeItem(\"auth_access_token\");\n      localStorage.removeItem(\"auth_refresh_token\");\n      // logoutPayload.webSocket.close();\n    });\n}\n\nexport async function updateUser(dispatch, updateUserPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      ...updateUserPayload,\n    }),\n  };\n\n  let response = await fetch(\n    \"http://127.0.0.1:8000/accounts/get-user/\",\n    requestOptions\n  );\n  let user = await response.json();\n  let data = {\n    user,\n    auth_access_token: JSON.parse(localStorage.getItem(\"currentUser\"))\n      .auth_access_token,\n    auth_refresh_token: JSON.parse(localStorage.getItem(\"currentUser\"))\n      .auth_refresh_token,\n  };\n  dispatch({ type: \"UPDATE_USER_DETAILS\", payload: data });\n  localStorage.setItem(\"currentUser\", JSON.stringify(data));\n}\n","let user = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).user\n  : \"\";\nlet access_token = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).auth_access_token\n  : \"\";\nlet refresh_token = localStorage.getItem(\"currentUser\")\n  ? JSON.parse(localStorage.getItem(\"currentUser\")).auth_refresh_token\n  : \"\";\n\nexport const initialState = {\n  user: \"\" || user,\n  access_token: \"\" || access_token,\n  refresh_token: \"\" || refresh_token,\n  loading: false,\n  errorMessage: null,\n};\n\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case \"REQUEST_LOGIN\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...initialState,\n        user: action.payload.user,\n        access_token: action.payload.auth_access_token,\n        refresh_token: action.payload.auth_refresh_token,\n        loading: false,\n      };\n    case \"LOGOUT\":\n      return {\n        ...initialState,\n        user: \"\",\n        access_token: \"\",\n        refresh_token: \"\",\n      };\n\n    case \"LOGIN_ERROR\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMessage: action.error,\n      };\n\n    case \"UPDATE_USER_DETAILS\":\n      return {\n        ...initialState,\n        user: action.payload.user,\n        access_token: action.payload.auth_access_token,\n        refresh_token: action.payload.auth_refresh_token,\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport { AuthReducer, initialState } from \"./reducer\";\n\nconst AuthStateContext = createContext();\nconst AuthDispatchContext = createContext();\n\nexport function useAuthState() {\n  const context = React.useContext(AuthStateContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthState must be used within a AuthProvider\");\n  }\n\n  return context;\n}\n\nexport function useAuthDispatch() {\n  const context = React.useContext(AuthDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthDispatch must be used within a AuthProvider\");\n  }\n\n  return context;\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, dispatch] = useReducer(AuthReducer, initialState);\n\n  return (\n    <AuthStateContext.Provider value={user}>\n      <AuthDispatchContext.Provider value={dispatch}>\n        {children}\n      </AuthDispatchContext.Provider>\n    </AuthStateContext.Provider>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Menu, MenuItem } from \"@mui/material\";\nimport { useAuthState } from \"../context\";\n\nfunction NotificationsMenu({ open, anchorEl, handleNotificationsMenuClose }) {\n  const [notifications, setNotifications] = useState([]);\n  const { user } = useAuthState();\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = () => {\n    fetch(\n      `http://127.0.0.1:8000/notifications/get-notifications/${user.username}/`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"====================================\");\n        console.log(data);\n        console.log(\"====================================\");\n      });\n  };\n\n  return (\n    <Menu\n      open={open}\n      elevation={0}\n      anchorEl={anchorEl}\n      keepMounted\n      //   anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id=\"primary-profile-notifications-menu\"\n      //   transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      onClose={handleNotificationsMenuClose}\n      style={{\n        marginTop: -755,\n        marginLeft: 1450,\n      }}\n    >\n      <MenuItem>Item1Item1Item1Item1Item1Item1Item1Item1Item1Item1</MenuItem>\n      <MenuItem>Item2</MenuItem>\n      <MenuItem>Item3</MenuItem>\n    </Menu>\n  );\n}\n\nexport default NotificationsMenu;\n","import { useRef, useEffect } from \"react\";\n\nfunction useDocumentTitle(title, prevailOnUnmount = false) {\n  const defaultTitle = useRef(document.title);\n\n  useEffect(\n    (prevailOnUnmount) => (prevailOnUnmount) => {\n      if (!prevailOnUnmount) {\n        document.title = defaultTitle.current;\n      }\n    },\n    []\n  );\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport default useDocumentTitle;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Typography,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Stack,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { useAuthState } from \"../context\";\n\nconst useStyles = makeStyles({\n  textField: {\n    width: 400,\n  },\n});\n\nfunction ChangePassword() {\n  let { user } = useAuthState();\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [showOldPassword, setShowOldPassword] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [showConfirmNewPassword, setShowConfirmNewPassword] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  const validate = () => {\n    if (!oldPassword) {\n      setErrorMessage(\"Empty Old Password!\");\n      setOpen(true);\n      return false;\n    }\n\n    if (!newPassword) {\n      setErrorMessage(\"Empty New Password!\");\n      setOpen(true);\n      return false;\n    }\n\n    if (!confirmNewPassword) {\n      setErrorMessage(\"Empty Confirm New Password!\");\n      setOpen(true);\n      return false;\n    }\n\n    if (newPassword !== confirmNewPassword) {\n      setErrorMessage(\"Password does not match!\");\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handlePasswordChange = (e) => {\n    setDisabled(true);\n    if (validate()) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: user.username,\n          old_password: oldPassword,\n          new_password: newPassword,\n        }),\n      };\n      fetch(\"http://127.0.0.1:8000/accounts/change-password/\", requestOptions)\n        .then((res) => res.json())\n        .then((data) => {\n          setDisabled(false);\n          if (data.errorMessage) setErrorMessage(data.errorMessage);\n          else setSuccessMessage(data.successMessage);\n          setOpen(true);\n          setTimeout(() => {\n            setErrorMessage(\"\");\n            setSuccessMessage(\"\");\n          }, 2000);\n        });\n    } else setDisabled(false);\n  };\n\n  return (\n    <>\n      <form>\n        <Typography variant=\"h5\" sx={{ marginBottom: 3 }}>\n          Change Password\n        </Typography>\n        <Typography variant=\"subtitle1\" sx={{ marginBottom: 5 }}>\n          Please provide with the Credentials below:\n        </Typography>\n        <Stack spacing={2}>\n          <TextField\n            label=\"Old Password\"\n            type={showOldPassword ? \"text\" : \"password\"}\n            required\n            //   error=\"Empty\"\n            onChange={(e) => {\n              setOldPassword(e.target.value);\n            }}\n            className={classes.textField}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    tabIndex={-1}\n                    aria-label=\"toggle password visibility\"\n                    onClick={() => {\n                      setShowOldPassword(!showOldPassword);\n                    }}\n                    onMouseDown={() => {\n                      setShowOldPassword(!showOldPassword);\n                    }}\n                  >\n                    {showOldPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            sx={{ marginBottom: 2 }}\n          />\n          <TextField\n            label=\"New Password\"\n            required\n            type={showNewPassword ? \"text\" : \"password\"}\n            value={newPassword}\n            onChange={(e) => {\n              setNewPassword(e.target.value);\n            }}\n            className={classes.textField}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    tabIndex={-1}\n                    aria-label=\"toggle password visibility\"\n                    onClick={() => {\n                      setShowNewPassword(!showNewPassword);\n                    }}\n                    onMouseDown={() => {\n                      setShowNewPassword(!showNewPassword);\n                    }}\n                  >\n                    {showNewPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            label=\"Confirm New Password\"\n            required\n            type={showConfirmNewPassword ? \"text\" : \"password\"}\n            value={confirmNewPassword}\n            onChange={(e) => {\n              setConfirmNewPassword(e.target.value);\n            }}\n            className={classes.textField}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    tabIndex={-1}\n                    aria-label=\"toggle password visibility\"\n                    onClick={() => {\n                      setShowConfirmNewPassword(!showConfirmNewPassword);\n                    }}\n                    onMouseDown={() => {\n                      setShowConfirmNewPassword(!showConfirmNewPassword);\n                    }}\n                  >\n                    {showConfirmNewPassword ? (\n                      <Visibility />\n                    ) : (\n                      <VisibilityOff />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Stack>\n        <Button\n          sx={{\n            marginTop: 3,\n            color: \"red\",\n          }}\n          onClick={handlePasswordChange}\n          disabled={disabled}\n        >\n          Set Password\n        </Button>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={open}\n          onClose={() => {\n            setOpen(false);\n          }}\n          key={\"topcenter\"}\n          autoHideDuration={2000}\n        >\n          <Alert\n            variant=\"filled\"\n            severity={errorMessage ? \"error\" : \"success\"}\n            onClose={() => {\n              setOpen(false);\n            }}\n          >\n            {errorMessage || successMessage}\n          </Alert>\n        </Snackbar>\n      </form>\n    </>\n  );\n}\n\nexport default ChangePassword;\n","import React, { useEffect } from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Paper,\n} from \"@mui/material\";\nimport { Close, HourglassBottom, Done } from \"@mui/icons-material\";\n\nfunction LeaveCalendarLeavesTable({ leaves }) {\n  useEffect(() => {}, [leaves]);\n\n  return (\n    <TableContainer component={Paper} sx={{ marginTop: 5 }}>\n      <Table style={{ minWidth: \"500px\" }}>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n              Leave ID\n            </TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n              Employee Name\n            </TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Leave Type</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>From</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>To</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leaves.map((leave, idx) => (\n            <TableRow key={leave.id}>\n              <TableCell>{idx + 1}</TableCell>\n              <TableCell>{leave.id}</TableCell>\n              <TableCell align=\"left\">{leave.name}</TableCell>\n              <TableCell>{leave.leave_type}</TableCell>\n              <TableCell>{leave.from_date}</TableCell>\n              <TableCell>{leave.to_date}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default LeaveCalendarLeavesTable;\n","import React, { useState, useEffect } from \"react\";\nimport { Divider, Typography, TextField } from \"@mui/material\";\nimport { useAuthState } from \"../context\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\n// import DatePicker from \"@mui/lab/DatePicker\";\nimport DatePicker from \"sassy-datepicker\";\nimport Calendar from \"react-calendar\";\nimport \"./Calendar.css\";\nimport LeaveCalendarLeavesTable from \"./LeaveCalendarLeavesTable\";\n\nfunction LeaveCalendar({ leaves }) {\n  const [leavesOnDate, setLeavesOnDate] = useState([]);\n\n  useEffect(() => {\n    console.log(leaves);\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          alignSelf: \"center\",\n          marginBottom: 10,\n        }}\n      >\n        <DatePicker\n          onChange={(date) => {\n            setLeavesOnDate(\n              leaves.filter(\n                (leave) =>\n                  leave.manager_approved &&\n                  leave.applied_on.slice(0, 10) ==\n                    date.toISOString().slice(0, 10)\n              )\n            );\n          }}\n        />\n      </div>\n      <Divider />\n      <div>\n        <LeaveCalendarLeavesTable leaves={leavesOnDate} />\n      </div>\n    </div>\n  );\n}\n\nexport default LeaveCalendar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  CssBaseline,\n  Drawer,\n  Divider,\n  List,\n  Container,\n  ListItem,\n  Grid,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { Badge, IconButton } from \"@mui/material\";\nimport {\n  Settings,\n  ExitToApp,\n  ChevronLeft,\n  Dashboard,\n  Person,\n  Business,\n  Notifications,\n} from \"@material-ui/icons\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport EmployeeTable from \"./EmployeeTable\";\nimport UserProfilePage from \"./UserProfilePage\";\nimport ManageDepartment from \"./ManageDepartment\";\nimport SettingsPage from \"./SettingsPage\";\nimport ManageLeaveType from \"./ManageLeaveType\";\nimport ManageEmployee from \"./ManageEmployee\";\nimport ManagerNotificationsMenu from \"./ManagerNotificationsMenu\";\nimport NotificationsMenu from \"./NotificationsMenu\";\nimport { logout, useAuthDispatch, useAuthState } from \"../context\";\nimport useDocumentTitle from \"./useDocumentTitle\";\nimport ChangePassword from \"./ChangePassword\";\nimport LeaveCalendar from \"./LeaveCalendar\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    // paddingTop: theme.spacing(4),\n    // paddingBottom: theme.spacing(4),\n    marginTop: \"120px\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  menuStyle: {\n    marginTop: \"40px\",\n  },\n}));\n\nconst Gutter = ({ w, h, mt, ml }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: \"lightgrey\",\n        width: w,\n        height: h,\n        borderRadius: \"3px\",\n        marginLeft: ml,\n        marginTop: mt,\n      }}\n    ></div>\n  );\n};\n\nlet webSocket;\n\nfunction ManagerDashboard(props) {\n  useDocumentTitle(\"ELMS   |   Manager\");\n  let history = useHistory();\n  let dispatch = useAuthDispatch();\n\n  const { user } = useAuthState();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(true);\n  const [notifications, setNotifications] = useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const [numOfEmployees, setNumOfEmployees] = useState(null);\n  const [numOfDepartments, setNumOfDepartments] = useState(null);\n  const [numOfLeaveTypes, setNumOfLeaveTypes] = useState(null);\n  const [isNotificationsOpen, setIsNotificationsOpen] = useState(false);\n  const [notificationsAnchorEl, setNotificaionsAnchorEl] = useState(false);\n  const [leaves, setLeaves] = useState([]);\n  const [allLeaves, setAllLeaves] = useState([]);\n\n  useEffect(() => {\n    fetchNumOfEmployees();\n    fetchNumOfDepts();\n    fetchNumOfLeaveTypes();\n    fetchLeaves();\n    fetchAllLeaves();\n    webSocket = new WebSocket(\"ws://127.0.0.1:8000/ws/update-user\");\n    webSocket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      // if (data.message === \"update\") fetchLeaves();\n      if (data.manager) fetchLeaves();\n    };\n    webSocket.onclose = function (e) {\n      console.error(\"Chat socket closed unexpectedly\");\n    };\n    // setInterval(() => {\n    //   fetchLeaves();\n    // }, 1000);\n  }, []);\n\n  const fetchLeaves = () => {\n    fetch(`http://127.0.0.1:8000/leaves/get-manager-leaves/${user.username}/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setLeaves([...data]);\n      });\n  };\n\n  const fetchAllLeaves = () => {\n    fetch(\"http://127.0.0.1:8000/leaves/get-all-leaves/\")\n      .then((res) => res.json())\n      .then((data) => {\n        setAllLeaves([...data]);\n      });\n  };\n\n  const fetchNumOfEmployees = () => {\n    fetch(\"http://127.0.0.1:8000/accounts/number-employees/\")\n      .then((res) => res.json())\n      .then((data) => {\n        setNumOfEmployees(data.length);\n      });\n  };\n\n  const fetchNumOfDepts = () => {\n    fetch(\"http://127.0.0.1:8000/dept/number-dept\")\n      .then((response) => response.json())\n      .then((data) => {\n        setNumOfDepartments(data.length);\n      });\n  };\n\n  const fetchNumOfLeaveTypes = () => {\n    fetch(\"http://127.0.0.1:8000/leave-types/number-leave-types\")\n      .then((response) => response.json())\n      .then((data) => {\n        setNumOfLeaveTypes(data.length);\n      });\n  };\n\n  // const getUser = () =>\n  //   localStorage.getItem(\"currentUser\")\n  //     ? JSON.parse(localStorage.getItem(\"currentUser\")).user\n  //     : \"\";\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const handleProfileMenuOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n    setIsMenuOpen(true);\n  };\n\n  const handleProfileMenuClose = () => {\n    setIsMenuOpen(false);\n  };\n\n  const handleNotificationsMenuClose = () => {\n    setIsNotificationsOpen(false);\n  };\n\n  const handleME = (e) => {\n    history.push(\"/manager/mng-emp\");\n  };\n\n  const handleML = (e) => {\n    history.push(\"/manager/mng-leave-type\");\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleViewLeaveCalendar = () => {\n    history.push(\"/manager/leave-calendar\");\n  };\n\n  // const handleProfileClick = () => {\n  //   setIsMenuOpen(false);\n  //   history.push(\"/manager/profile\");\n  // };\n\n  const handleDashboardClick = () => {\n    history.push(\"/manager/\");\n  };\n\n  const handleAddDeparmentClick = () => {\n    history.push(\"/manager/mng-dpt\");\n  };\n\n  const handleSettignsClick = () => {\n    setIsMenuOpen(false);\n    history.push(\"/manager/settings\");\n  };\n\n  const handleLogoutClick = async () => {\n    await logout(dispatch, { username: user.username, webSocket: webSocket });\n    history.push(\"/login\");\n  };\n\n  const handleNotificationClick = (e) => {\n    e.preventDefault();\n    setNotificaionsAnchorEl(e.currentTarget);\n    setIsNotificationsOpen(true);\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      className={classes.menuStyle}\n      elevation={0}\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      id=\"primary-profile-account-menu\"\n      // keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={isMenuOpen}\n      onClose={handleProfileMenuClose}\n    >\n      {/* <MenuItem onClick={handleProfileClick}>\n        <ListItemIcon>\n          <AccountCircle />\n        </ListItemIcon>\n        <ListItemText>Profile</ListItemText>\n      </MenuItem> */}\n\n      <MenuItem onClick={handleSettignsClick}>\n        <ListItemIcon>\n          <Settings />\n        </ListItemIcon>\n        <ListItemText>Settings</ListItemText>\n      </MenuItem>\n\n      <MenuItem onClick={handleLogoutClick}>\n        <ListItemIcon>\n          <ExitToApp />\n        </ListItemIcon>\n        <ListItemText>Logout</ListItemText>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            LMS Dashboard (Manager)\n          </Typography>\n\n          <IconButton\n            color=\"inherit\"\n            onClick={handleNotificationClick}\n            aria-label=\"notifications of current user\"\n            aria-controls=\"primary-profile-notifications-menu\"\n            aria-haspopup=\"true\"\n            sx={{ marginRight: 5 }}\n          >\n            {notifications === 0 ? (\n              <Notifications />\n            ) : (\n              <Badge badgeContent={notifications} color=\"primary\">\n                <Notifications />\n              </Badge>\n            )}\n          </IconButton>\n\n          <NotificationsMenu\n            open={isNotificationsOpen}\n            handleNotificationsMenuClose={handleNotificationsMenuClose}\n          />\n\n          <IconButton\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-profile-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleProfileMenuOpen}\n          >\n            <Avatar style={{ height: \"35px\", width: \"35px\" }}>\n              {user.first_name.charAt(0) + user.last_name.charAt(0)}\n            </Avatar>\n          </IconButton>\n\n          {renderProfileMenu}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeft />\n          </IconButton>\n        </div>\n\n        <Divider />\n\n        <List>\n          <ListItem button onClick={handleDashboardClick}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n\n          <ListItem button onClick={handleME}>\n            <ListItemIcon>\n              <Person />\n            </ListItemIcon>\n            <ListItemText primary=\"Manage Employees\" />\n          </ListItem>\n\n          <ListItem button onClick={handleAddDeparmentClick}>\n            <ListItemIcon>\n              <Business />\n            </ListItemIcon>\n            <ListItemText primary=\"Manage Department\" />\n          </ListItem>\n\n          <ListItem button onClick={handleML}>\n            <ListItemIcon>\n              <FontAwesomeIcon icon={faLeaf}></FontAwesomeIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Manage Leave Type\" />\n          </ListItem>\n          <ListItem button onClick={handleViewLeaveCalendar}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"View Leave Calendar\" />\n          </ListItem>\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer}>\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Route path=\"/manager/\" exact>\n              <Grid container spacing={3} justifyContent=\"space-around\">\n                <Grid item xs={12} md={4} lg={3}>\n                  {/* Total NUmber of Employees */}\n                  <Card style={{ textAlign: \"center\" }}>\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Number of Employees\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {numOfEmployees !== null ? (\n                          numOfEmployees\n                        ) : (\n                          <Gutter w=\"30px\" h=\"30px\" ml=\"110px\" mt=\"3.2px\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                  <Card style={{ textAlign: \"center\" }}>\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Number of Departments\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {numOfDepartments !== null ? (\n                          numOfDepartments\n                        ) : (\n                          <Gutter w=\"30px\" h=\"30px\" ml=\"110px\" mt=\"3.2px\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={4} lg={4}>\n                  <Card style={{ textAlign: \"center\" }}>\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Number of Leave Types\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {numOfLeaveTypes !== null ? (\n                          numOfLeaveTypes\n                        ) : (\n                          <Gutter w=\"30px\" h=\"30px\" ml=\"160px\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={4} lg={12}>\n                  <EmployeeTable\n                    role=\"manager\"\n                    leaves={leaves}\n                    webSocket={webSocket}\n                    fetchLeaves={fetchLeaves}\n                  />\n                </Grid>\n              </Grid>\n            </Route>\n            <Route path=\"/manager/profile\" exact>\n              <UserProfilePage />\n            </Route>\n            <Route path=\"/manager/mng-dpt\" exact>\n              <ManageDepartment fetchNumOfDepts={fetchNumOfDepts} />\n            </Route>\n            <Route path=\"/manager/mng-leave-type\" exact>\n              <ManageLeaveType fetchNumOfLeaveTypes={fetchNumOfLeaveTypes} />\n            </Route>\n            <Route path=\"/manager/mng-emp\" exact>\n              <ManageEmployee\n                fetchNumOfEmployees={fetchNumOfEmployees}\n                fetchLeaves={fetchLeaves}\n              />\n            </Route>\n            <Route path=\"/manager/settings\" exact>\n              <SettingsPage role=\"manager\" />\n            </Route>\n            <Route path=\"/manager/change-password\" exact>\n              <ChangePassword />\n            </Route>\n            <Route path=\"/manager/leave-calendar\" exact>\n              <LeaveCalendar leaves={allLeaves} />\n            </Route>\n          </Container>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default ManagerDashboard;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuthState } from \"../context\";\n\nfunction ProtectedRoute({ component: Component, ...rest }) {\n  const { access_token } = useAuthState();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        access_token ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from \"chart.js\";\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { TailSpin } from \"react-loader-spinner\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  ArcElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\n\nconst data = {\n  labels,\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: [12, 34, 56, 78, 90, 10, 20],\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n    },\n    {\n      label: \"Dataset 2\",\n      data: [98, 76, 54, 32, 21, 76, 54],\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\",\n    },\n  ],\n};\n\nconst data2 = {\n  labels,\n  datasets: [\n    {\n      label: \"Dataset 1\",\n      data: [12, 34, 56, 78, 90, 10, 20],\n      backgroundColor: [\n        \"rgba(255, 99, 132, 0.5\",\n        \"rgba(255, 99, 132, 0.2)\",\n        \"rgba(54, 162, 235, 0.2)\",\n        \"rgba(255, 206, 86, 0.2)\",\n        \"rgba(75, 192, 192, 0.2)\",\n        \"rgba(153, 102, 255, 0.2)\",\n        \"rgba(255, 159, 64, 0.2)\",\n      ],\n      borderColor: [\n        \"rgba(53, 162, 235, 0.5)\",\n        \"rgba(255, 99, 132, 1)\",\n        \"rgba(54, 162, 235, 1)\",\n        \"rgba(255, 206, 86, 1)\",\n        \"rgba(75, 192, 192, 1)\",\n        \"rgba(153, 102, 255, 1)\",\n        \"rgba(255, 159, 64, 1)\",\n      ],\n    },\n  ],\n};\n\nfunction LeavesChart({ loaded, loading, handleLoadingDone }) {\n  useEffect(() => {\n    setTimeout(() => {\n      handleLoadingDone();\n    }, 2000);\n  }, [loaded, loading]);\n\n  return (\n    <div>\n      {!loaded ? (\n        <></>\n      ) : loading ? (\n        <div\n          style={{\n            marginLeft: \"50%\",\n            marginTop: \"25%\",\n          }}\n        >\n          <TailSpin color=\"gray\" height=\"60\" width=\"60\" />\n        </div>\n      ) : (\n        <Bar data={data} />\n      )}\n    </div>\n  );\n}\n\nexport default LeavesChart;\n","import React, { useEffect } from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  Paper,\n} from \"@mui/material\";\nimport { Close, HourglassBottom, Done } from \"@mui/icons-material\";\n\nfunction EmployeeReportLeavesTable({ leaves, name }) {\n  useEffect(() => {}, [leaves]);\n\n  return (\n    <TableContainer component={Paper} sx={{ marginTop: 5 }}>\n      <Table style={{ minWidth: \"500px\" }}>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n              Leave ID\n            </TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n              Employee Name\n            </TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Leave Type</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Applied On</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>From</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>To</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leaves.map((leave, idx) => (\n            <TableRow key={leave.id}>\n              <TableCell>{idx + 1}</TableCell>\n              <TableCell>{leave.id}</TableCell>\n              <TableCell align=\"left\">{name}</TableCell>\n              <TableCell>{leave.leave_type}</TableCell>\n              <TableCell>{leave.applied_on.substr(0, 10)}</TableCell>\n              <TableCell>{leave.from_date}</TableCell>\n              <TableCell>{leave.to_date}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default EmployeeReportLeavesTable;\n","import React, { useEffect } from \"react\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport {\n  Typography,\n  Paper,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useMemo } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from \"chart.js\";\nimport EmployeeReportLeavesTable from \"./EmployeeReportLeavesTable\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  ArcElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nString.prototype.toRGB = function () {\n  var hash = 0;\n  if (this.length === 0) return hash;\n  for (var i = 0; i < this.length; i++) {\n    hash = this.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255;\n    rgb[i] = value;\n  }\n  return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n};\n\nfunction EmployeeReport({ loaded, loading, leaves, employee }) {\n  const totalLeaves = useMemo(() => leaves.length, [leaves]);\n  const totalLeavesByLeaveTypes = useMemo(() => {\n    let ans = {};\n    for (let i in leaves) {\n      let leave = leaves[i];\n      if (leave.leave_type in ans) ans[leave.leave_type] += 1;\n      else ans[leave.leave_type] = 1;\n    }\n    return ans;\n  }, [leaves]);\n  const totalLeavesByStatus = useMemo(() => {\n    let ans = {\n      waiting_approval: 0,\n      accepted: 0,\n      rejected: 0,\n    };\n    for (let i in leaves) {\n      let leave = leaves[i];\n      if (leave.waiting_approval) ans[\"waiting_approval\"] += 1;\n      else if (!leave.admin_approved) ans[\"rejected\"] += 1;\n      else if (leave.manager_approved) ans[\"accepted\"] += 1;\n      else ans[\"rejected\"] += 1;\n    }\n    return ans;\n  }, [leaves]);\n\n  useEffect(() => {}, [employee, loading]);\n\n  return !loaded ? (\n    <></>\n  ) : loading ? (\n    <div\n      style={{\n        marginLeft: \"50%\",\n        marginTop: \"25%\",\n      }}\n    >\n      <TailSpin color=\"gray\" height=\"60\" width=\"60\" />\n    </div>\n  ) : (\n    <Paper\n      elevation={10}\n      style={{\n        marginTop: \"10px\",\n      }}\n    >\n      <Grid container>\n        <Grid item xs={3}>\n          <Card>\n            <CardHeader title=\"Employee Name\" />\n            <CardContent>\n              <Typography>\n                {employee.first_name + \" \" + employee.last_name}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={3}>\n          <Card>\n            <CardHeader title=\"Employee ID\" />\n            <CardContent>\n              <Typography>{employee.employee_id}</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={3}>\n          <Card>\n            <CardHeader title=\"Employee Type\" />\n            <CardContent>\n              <Typography>\n                {employee.contract_based ? \"Contract Based\" : \"Regular Based\"}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={6} marginTop={5}>\n          <div>\n            <Pie\n              data={{\n                labels: Object.keys(totalLeavesByLeaveTypes),\n                datasets: [\n                  {\n                    label: \"# of Leaves applied in various Leave Types\",\n                    data: Object.values(totalLeavesByLeaveTypes),\n                    backgroundColor: Object.keys(totalLeavesByLeaveTypes).map(\n                      (str) => str.toRGB()\n                    ),\n                  },\n                ],\n              }}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={6} marginTop={5}>\n          <div>\n            <Pie\n              data={{\n                labels: Object.keys(totalLeavesByStatus),\n                datasets: [\n                  {\n                    label: \"# of Leaves Accepted/Rejected\",\n                    data: Object.values(totalLeavesByStatus),\n                    backgroundColor: Object.keys(totalLeavesByStatus).map(\n                      (str) => str.toRGB()\n                    ),\n                  },\n                ],\n              }}\n            />\n          </div>\n        </Grid>\n        <Grid item xs={12} marginBottom={5}>\n          <EmployeeReportLeavesTable\n            leaves={leaves}\n            name={employee.first_name + \" \" + employee.last_name}\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default EmployeeReport;\n","import React from \"react\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport {\n  Paper,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n} from \"@mui/material\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  ArcElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nString.prototype.toRGB = function () {\n  var hash = 0;\n  if (this.length === 0) return hash;\n  for (var i = 0; i < this.length; i++) {\n    hash = this.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255;\n    rgb[i] = value;\n  }\n  return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n};\n\nexport default function DepartmentReport({\n  loaded,\n  loading,\n  leaves,\n  dept,\n  numEmp,\n  pieChartData,\n}) {\n  return (\n    <div>\n      {!loaded ? (\n        <></>\n      ) : loading ? (\n        <div\n          style={{\n            marginLeft: \"50%\",\n            marginTop: \"25%\",\n          }}\n        >\n          <TailSpin color=\"gray\" height=\"60\" width=\"60\" />\n        </div>\n      ) : (\n        <Paper\n          elevation={10}\n          style={{\n            marginTop: \"10px\",\n          }}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <Card>\n                <CardHeader title=\"Department Name\" />\n                <CardContent>\n                  <Typography>{dept.dept_name}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={3}>\n              <Card>\n                <CardHeader title=\"No. of Employees\" />\n                <CardContent>\n                  <Typography>{numEmp}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={3}>\n              <Card>\n                <CardHeader title=\"Department Code\" />\n                <CardContent>\n                  <Typography>{dept.dept_code}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={3}></Grid>\n            <Grid item xs={6} marginTop={5}>\n              <div>\n                <Pie\n                  data={{\n                    labels: Object.keys(pieChartData),\n                    datasets: [\n                      {\n                        label: \"# of Leaves Accepted/Rejected\",\n                        data: Object.values(pieChartData),\n                        backgroundColor: Object.keys(pieChartData).map((str) =>\n                          str.toRGB()\n                        ),\n                      },\n                    ],\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={3}></Grid>\n          </Grid>\n        </Paper>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport {\n  Paper,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n} from \"@mui/material\";\nimport { Pie } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  ArcElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nString.prototype.toRGB = function () {\n  var hash = 0;\n  if (this.length === 0) return hash;\n  for (var i = 0; i < this.length; i++) {\n    hash = this.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255;\n    rgb[i] = value;\n  }\n  return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n};\n\nfunction LeaveTypeReport({ loaded, loading, leaveType, pieChartData }) {\n  useEffect(() => {}, [loading]);\n  return (\n    <div>\n      {!loaded ? (\n        <></>\n      ) : loading ? (\n        <div\n          style={{\n            marginLeft: \"50%\",\n            marginTop: \"25%\",\n          }}\n        >\n          <TailSpin color=\"gray\" height=\"60\" width=\"60\" />\n        </div>\n      ) : (\n        <Paper\n          elevation={10}\n          style={{\n            marginTop: \"10px\",\n          }}\n        >\n          <Grid container>\n            <Grid item xs={3}>\n              <Card>\n                <CardHeader title=\"Leave Type Name\" />\n                <CardContent>\n                  <Typography>{leaveType.leave_type_name}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={3}>\n              <Card>\n                <CardHeader title=\"Leave Type Code\" />\n                <CardContent>\n                  <Typography>{leaveType.leave_type_code}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={1}></Grid>\n            <Grid item xs={3}>\n              <Card>\n                <CardHeader title=\"Leave Type Limit\" />\n                <CardContent>\n                  <Typography>{leaveType.limit}</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={3}></Grid>\n            <Grid item xs={6} marginTop={5}>\n              <div>\n                <Pie\n                  data={{\n                    labels: Object.keys(pieChartData),\n                    datasets: [\n                      {\n                        label: \"# of Leaves Accepted/Rejected\",\n                        data: Object.values(pieChartData),\n                        backgroundColor: Object.keys(pieChartData).map((str) =>\n                          str.toRGB()\n                        ),\n                      },\n                    ],\n                  }}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={3}></Grid>\n          </Grid>\n        </Paper>\n      )}\n    </div>\n  );\n}\n\nexport default LeaveTypeReport;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LeavesChart from \"./LeavesChart\";\nimport { Typography, Grid } from \"@mui/material\";\nimport {\n  AppBar,\n  Toolbar,\n  TextField,\n  IconButton,\n  FormLabel,\n  FormControl,\n  Box,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Button,\n} from \"@mui/material\";\nimport { FilterAlt } from \"@mui/icons-material\";\nimport EmployeeReport from \"./EmployeeReport\";\nimport DepartmentReport from \"./DepartmentReport\";\nimport LeaveTypeReport from \"./LeaveTypeReport\";\nimport DateRangePicker from \"@mui/lab/DateRangePicker\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nvar fileDownload = require(\"js-file-download\");\n\nconst useStyles = makeStyles((theme) => ({\n  filterBarContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    gap: 20,\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction ReportGeneration() {\n  const classes = useStyles();\n\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [empLoaded, setEmpLoaded] = useState(false);\n  const [empLoading, setEmpLoading] = useState(null);\n  const [empLeaves, setEmpLeaves] = useState([]);\n  const [empDetails, setEmpDetails] = useState(null);\n  const [deptLoaded, setDeptLoaded] = useState(false);\n  const [deptLoading, setDeptLoading] = useState(null);\n  const [deptDetails, setDeptDetails] = useState(null);\n  const [leaveTypeDetails, setLeaveTypeDetails] = useState(null);\n  const [deptPieChartData, setDeptPieChartData] = useState(null);\n  const [leaveTypePieChartData, setLeaveTypePieChartData] = useState(null);\n  const [numEmp, setNumEmp] = useState(null);\n  const [deptLeaves, setDeptLeaves] = useState([]);\n  const [leaveTypesLoaded, setLeaveTypesLoaded] = useState(false);\n  const [leaveTypesLoading, setLeaveTypesLoading] = useState(null);\n  const [leaveTypesLeaves, setLeaveTypesLeaves] = useState([]);\n  const [empID, setEmpID] = useState(\"\");\n  const [department, setDepartment] = useState();\n  const [leaveType, setLeaveType] = useState();\n  const [value, setValue] = useState(\"\");\n  const [dateRange, setDateRange] = React.useState([null, null]);\n\n  useEffect(() => {\n    fetchDepartments();\n    fetchLeaveTypes();\n  }, []);\n\n  const fetchDepartments = () => {\n    return fetch(\"http://127.0.0.1:8000/dept/add-dept\")\n      .then((response) => response.json())\n      .then((data) => {\n        setDepartments([...data]);\n      });\n  };\n\n  const fetchLeaveTypes = () => {\n    fetch(\"http://127.0.0.1:8000/leave-types/add-leave-type\")\n      .then((response) => response.json())\n      .then((data) => {\n        setLeaveTypes([...data]);\n      });\n  };\n\n  const handleEmpLoading = () => {\n    setEmpLoaded(true);\n    setEmpLoading(true);\n  };\n  const handleEmpLoadingDone = () => {\n    setEmpLoading(false);\n  };\n\n  const handleDeptLoading = () => {\n    setDeptLoaded(true);\n    setDeptLoading(true);\n  };\n  const handleDeptLoadingDone = () => {\n    setDeptLoading(false);\n  };\n\n  const handleLeaveTypesLoading = () => {\n    setLeaveTypesLoaded(true);\n    setLeaveTypesLoading(true);\n  };\n  const handleLeaveTypesLoadingDone = () => {\n    setLeaveTypesLoading(false);\n  };\n\n  const handleChangeDepartment = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDepartment(value);\n  };\n\n  const handleChangeLeaveType = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setLeaveType(value);\n  };\n\n  const handleFilterByChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleFilterClick = (e) => {\n    if (value === \"employee_id\") {\n      handleEmpLoading();\n      console.log(\"EMPLOYEE ID\");\n      fetch(`http://127.0.0.1:8000/leaves/filter-leaves-empid/${empID}/`)\n        .then((res) => res.json())\n        .then((_data) => {\n          if (dateRange[0] == null && dateRange[1] == null) setEmpLeaves(_data);\n          else {\n            var query_from = dateRange[0].toISOString().slice(0, 10);\n            var query_to = dateRange[1].toISOString().slice(0, 10);\n            setEmpLeaves(\n              _data\n                .filter((leave) => leave.manager_approved)\n                .filter(\n                  (leave) =>\n                    (new Date(leave.from_date) < new Date(query_from) &&\n                      new Date(leave.to_date) > new Date(query_from)) ||\n                    (new Date(leave.from_date) > new Date(query_from) &&\n                      new Date(leave.to_date) < new Date(query_to)) ||\n                    (new Date(leave.from_date) < new Date(query_to) &&\n                      new Date(leave.to_date) > new Date(query_to))\n                )\n            );\n          }\n          fetch(`http://127.0.0.1:8000/accounts/get-user-by-id/${empID}/`)\n            .then((res) => res.json())\n            .then((data) => {\n              setEmpDetails(data);\n              handleEmpLoadingDone();\n            });\n        });\n    } else if (value === \"department\") {\n      handleDeptLoading();\n      console.log(\"DEPARTMENT\", department);\n      fetch(`http://127.0.0.1:8000/leaves/filter-leaves-dept/${department}/`)\n        .then((res) => res.json())\n        .then((data) => {\n          setDeptLeaves(data);\n          fetch(`http://127.0.0.1:8000/dept/get-dept/${department}`)\n            .then((res) => res.json())\n            .then((data) => {\n              setDeptDetails(data);\n              fetch(`http://127.0.0.1:8000/leaves/pie-chart-data/`)\n                .then((res) => res.json())\n                .then((data) => {\n                  setDeptPieChartData(data);\n                  handleDeptLoadingDone();\n                });\n            });\n        });\n    } else if (value === \"leave_type\") {\n      handleLeaveTypesLoading();\n      fetch(\n        `http://127.0.0.1:8000/leaves/filter-leaves-leaveType/${leaveType}/`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setLeaveTypesLeaves(data);\n          fetch(\"http://127.0.0.1:8000/leave-types/pie-chart-data/\")\n            .then((res) => res.json())\n            .then((data) => {\n              setLeaveTypePieChartData(data);\n              fetch(\n                `http://127.0.0.1:8000/leave-types/get-by-name/${leaveType}`\n              )\n                .then((res) => res.json())\n                .then((data) => {\n                  setLeaveTypeDetails(data);\n                  handleLeaveTypesLoadingDone();\n                });\n            });\n        });\n    }\n  };\n\n  const handleReportGeneration = () => {\n    let leaveId = [];\n    for (let leave in empLeaves) {\n      leaveId.push(empLeaves[leave].id);\n    }\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        leaveIds: leaveId,\n      }),\n      responseType: \"blob\",\n    };\n\n    fetch(\"http://127.0.0.1:8000/leaves/generate-report\", requestOptions)\n      .then((res) => {\n        return res.blob();\n      })\n      .then((data) => {\n        fileDownload(data, \"report.xlsx\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <Grid container spacing={0}>\n        <Grid item xs={6} marginBottom={2}>\n          <Typography variant=\"h4\">Report Generation</Typography>\n        </Grid>\n        <Grid item xs={6} marginBottom={2}>\n          <Box display=\"flex\" justifyContent=\"flex-end\">\n            <Button\n              variant=\"contained\"\n              disabled={!empLoaded}\n              onClick={handleReportGeneration}\n            >\n              Export Report\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <AppBar position=\"static\" color=\"transparent\">\n            <Toolbar>\n              <div className={classes.filterBarContainer}>\n                <FormControl style={{ marginRight: 100 }}>\n                  <FormLabel id=\"filter-by-button\">Filter by</FormLabel>\n                  <RadioGroup\n                    aria-labelledby=\"filter-by-button\"\n                    name=\"filter-by-button-group\"\n                    value={value}\n                    row\n                    onChange={handleFilterByChange}\n                  >\n                    <FormControlLabel\n                      value=\"employee_id\"\n                      control={<Radio />}\n                      label=\"Employee ID\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DateRangePicker\n                    startText=\"Leaves From\"\n                    endText=\"Leaves Till\"\n                    value={dateRange}\n                    onChange={(newValue) => {\n                      setDateRange(newValue);\n                    }}\n                    renderInput={(startProps, endProps) => (\n                      <React.Fragment>\n                        <TextField {...startProps} />\n                        <Box sx={{ mx: 2 }}> to </Box>\n                        <TextField {...endProps} />\n                      </React.Fragment>\n                    )}\n                  />\n                </LocalizationProvider>\n                <TextField\n                  variant=\"outlined\"\n                  label=\"Employee ID\"\n                  style={{ width: 500 }}\n                  value={empID}\n                  onChange={(e) => {\n                    setEmpID(e.target.value);\n                  }}\n                >\n                  Emoloyee ID\n                </TextField>\n              </div>\n              <div>\n                <IconButton\n                  type=\"submit\"\n                  style={{ marginLeft: 15 }}\n                  onClick={handleFilterClick}\n                >\n                  <FilterAlt />\n                </IconButton>\n              </div>\n            </Toolbar>\n          </AppBar>\n        </Grid>\n        <Grid item xs={12}>\n          {value === \"employee_id\" ? (\n            <EmployeeReport\n              loaded={empLoaded}\n              loading={empLoading}\n              handleLoadingDone={handleEmpLoadingDone}\n              leaves={empLeaves}\n              employee={empDetails}\n            />\n          ) : value === \"department\" ? (\n            <DepartmentReport\n              loaded={deptLoaded}\n              loading={deptLoading}\n              handleLoadingDone={handleDeptLoadingDone}\n              leaves={deptLeaves}\n              dept={deptDetails}\n              pieChartData={deptPieChartData}\n              numEmp={numEmp}\n            />\n          ) : (\n            <LeaveTypeReport\n              loaded={leaveTypesLoaded}\n              loading={leaveTypesLoading}\n              handleLoadingDone={handleLeaveTypesLoadingDone}\n              leaves={leaveTypesLeaves}\n              pieChartData={leaveTypePieChartData}\n              leaveType={leaveTypeDetails}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ReportGeneration;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  CssBaseline,\n  Drawer,\n  Divider,\n  List,\n  Container,\n  ListItem,\n  Grid,\n  Card,\n  DialogContent,\n  CardContent,\n} from \"@material-ui/core\";\nimport {\n  Box,\n  Dialog,\n  DialogActions,\n  IconButton,\n  DialogTitle,\n  Stack,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  Button,\n  Badge,\n} from \"@mui/material\";\nimport {\n  Settings,\n  ExitToApp,\n  ChevronLeft,\n  Dashboard,\n  Person,\n  Business,\n  Notifications,\n} from \"@material-ui/icons\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\nimport EmployeeTable from \"./EmployeeTable\";\nimport UserProfilePage from \"./UserProfilePage\";\nimport ManageDepartment from \"./ManageDepartment\";\nimport SettingsPage from \"./SettingsPage\";\nimport ManageLeaveType from \"./ManageLeaveType\";\nimport NotificationsMenu from \"./NotificationsMenu\";\nimport ManageEmployee from \"./ManageEmployee\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { logout, useAuthDispatch, useAuthState } from \"../context\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { getStates } from \"country-state-picker\";\nimport useDocumentTitle from \"./useDocumentTitle\";\nimport ChangePassword from \"./ChangePassword\";\nimport LeaveCalendar from \"./LeaveCalendar\";\nimport ReportGeneration from \"./ReportGeneration\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    // paddingTop: theme.spacing(4),\n    // paddingBottom: theme.spacing(4),\n    marginTop: \"120px\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  menuStyle: {\n    marginTop: \"40px\",\n  },\n}));\n\nconst Gutter = ({ w, h, mt, ml }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: \"lightgrey\",\n        width: w,\n        height: h,\n        borderRadius: \"3px\",\n        marginLeft: ml,\n        marginTop: mt,\n      }}\n    ></div>\n  );\n};\n\nlet webSocket;\n\nfunction AdminDashboard(props) {\n  useDocumentTitle(\"ELMS    |   Admin\");\n  let history = useHistory();\n  let dispatch = useAuthDispatch();\n\n  const { user } = useAuthState();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(true);\n  const [open2, setOpen2] = useState(false);\n  const [notifications, setNotifications] = useState(1);\n  const [isNotificationsOpen, setIsNotificationsOpen] = useState(false);\n  const [notificationsAnchorEl, setNotificaionsAnchorEl] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const [numOfEmployees, setNumOfEmployees] = useState(null);\n  const [numOfDepartments, setNumOfDepartments] = useState(null);\n  const [numOfLeaveTypes, setNumOfLeaveTypes] = useState(null);\n  const [value, setValue] = React.useState(null);\n  const [state, setState] = useState(null);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [empID, setEmpID] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [flat, setFlat] = useState(\"\");\n  const [area, setArea] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [leaves, setLeaves] = useState([]);\n  const [allLeaves, setAllLeaves] = useState([]);\n\n  const [joiningDate, setJoiningDate] = useState(null);\n\n  useEffect(() => {\n    fetchNumOfEmployees();\n    fetchNumOfDepts();\n    fetchNumOfLeaveTypes();\n    fetchLeaves();\n    fetchAllLeaves();\n    webSocket = new WebSocket(\"ws://127.0.0.1:8000/ws/update-user\");\n    webSocket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      if (data.action === \"UPDATE\") {\n        if (data.admin) {\n          fetchLeaves();\n        }\n      } else if (data.action === \"LOGOUT\")\n        logout(dispatch, { username: user.username, webSocket: webSocket });\n    };\n    webSocket.onclose = function (e) {\n      console.error(\"Chat socket closed unexpectedly\");\n    };\n  }, []);\n\n  const fetchLeaves = () => {\n    fetch(`http://127.0.0.1:8000/leaves/get-admin-leaves/${user.username}/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setLeaves([...data]);\n      });\n  };\n\n  const fetchAllLeaves = () => {\n    fetch(\"http://127.0.0.1:8000/leaves/get-all-leaves/\")\n      .then((res) => res.json())\n      .then((data) => {\n        setAllLeaves([...data]);\n      });\n  };\n\n  const fetchNumOfDepts = () => {\n    fetch(\"http://127.0.0.1:8000/dept/number-dept\")\n      .then((response) => response.json())\n      .then((data) => {\n        setNumOfDepartments(data.length);\n      });\n  };\n\n  const handleNotificationsMenuClose = () => {\n    setIsNotificationsOpen(false);\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"manager_first_name\")\n      setFirstName(event.target.value);\n    else if (event.target.id === \"manager_last_name\")\n      setLastName(event.target.value);\n    else if (event.target.id === \"manager_username\")\n      setUsername(event.target.value);\n    else if (event.target.id === \"manager_id\") setEmpID(event.target.value);\n    else if (event.target.id === \"manager_department_code\")\n      setDepartment(event.target.value);\n    else if (event.target.id === \"manager_number\")\n      setPhoneNumber(event.target.value);\n    else if (event.target.id === \"manager_flat\") setFlat(event.target.value);\n    else if (event.target.id === \"manager_area\") setArea(event.target.value);\n    else if (event.target.id === \"manager_town\") setTown(event.target.value);\n    else setState(event.target.value);\n  };\n\n  const fetchNumOfLeaveTypes = () => {\n    fetch(\"http://127.0.0.1:8000/leave-types/number-leave-types\")\n      .then((response) => response.json())\n      .then((data) => {\n        setNumOfLeaveTypes(data.length);\n      });\n  };\n\n  const handleProfileMenuOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n    setIsMenuOpen(true);\n  };\n\n  const handleProfileMenuClose = () => {\n    setIsMenuOpen(false);\n  };\n\n  const handleME = (e) => {\n    history.push(\"/admin/mng-emp\");\n  };\n\n  const handleML = (e) => {\n    history.push(\"/admin/mng-leave-type\");\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDashboardClick = () => {\n    history.push(\"/admin\");\n  };\n\n  const handleAddDeparmentClick = () => {\n    history.push(\"/admin/mng-dpt\");\n  };\n\n  const handleViewLeaveCalendar = () => {\n    history.push(\"/admin/leave-calendar\");\n  };\n\n  const handleReportGenerationClick = () => {\n    history.push(\"/admin/report-generation\");\n  };\n\n  const handleSettignsClick = () => {\n    setIsMenuOpen(false);\n    history.push(\"/admin/settings\");\n  };\n\n  const handleLogoutClick = () => {\n    logout(dispatch, { username: user.username, webSocket: webSocket });\n  };\n\n  const handleNotificationClick = (e) => {\n    e.preventDefault();\n    setNotificaionsAnchorEl(e.currentTarget);\n    setIsNotificationsOpen(true);\n  };\n\n  const fetchNumOfEmployees = () => {\n    fetch(\"http://127.0.0.1:8000/accounts/number-employees/\")\n      .then((res) => res.json())\n      .then((data) => {\n        setNumOfEmployees(data.length);\n      });\n  };\n\n  const handleAddManagerClick = () => {\n    setOpen2(true);\n  };\n\n  const handleClose = () => {\n    setOpen2(false);\n  };\n\n  const handleAddManager = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: username,\n        first_name: firstName,\n        last_name: lastName,\n        employee_id: empID,\n        dob: value.toISOString().slice(0, 10),\n        department_code: department,\n        phone_number: phoneNumber,\n        joining_date: joiningDate.toISOString().slice(0, 10),\n        flat: flat,\n        town: town,\n        state: state,\n      }),\n    };\n\n    fetch(\"http://127.0.0.1:8000/accounts/register/manager\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {});\n\n    setOpen2(false);\n    setValue(null);\n    setUsername(\"\");\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmpID(\"\");\n    setDepartment(\"\");\n    setPhoneNumber(\"\");\n    setFlat(\"\");\n    setArea(\"\");\n    setTown(\"\");\n    setJoiningDate(null);\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      className={classes.menuStyle}\n      elevation={0}\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      id=\"primary-profile-account-menu\"\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={isMenuOpen}\n      onClose={handleProfileMenuClose}\n    >\n      {/* <MenuItem onClick={handleProfileClick}>\n        <ListItemIcon>\n          <AccountCircle />\n        </ListItemIcon>\n        <ListItemText>Profile</ListItemText>\n      </MenuItem> */}\n\n      <MenuItem onClick={handleSettignsClick}>\n        <ListItemIcon>\n          <Settings />\n        </ListItemIcon>\n        <ListItemText>Settings</ListItemText>\n      </MenuItem>\n\n      <MenuItem onClick={handleLogoutClick}>\n        <ListItemIcon>\n          <ExitToApp />\n        </ListItemIcon>\n        <ListItemText>Logout</ListItemText>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            LMS Dashboard (Admin)\n          </Typography>\n\n          <IconButton\n            color=\"inherit\"\n            onClick={handleNotificationClick}\n            sx={{ marginRight: 5 }}\n          >\n            {notifications === 0 ? (\n              <Notifications />\n            ) : (\n              <Badge badgeContent={notifications} color=\"primary\">\n                <Notifications />\n              </Badge>\n            )}\n          </IconButton>\n\n          <NotificationsMenu\n            open={isNotificationsOpen}\n            handleNotificationsMenuClose={handleNotificationsMenuClose}\n          />\n\n          <IconButton\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-profile-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleProfileMenuOpen}\n          >\n            <Avatar style={{ height: \"35px\", width: \"35px\" }}>\n              {user.first_name.charAt(0) + user.last_name.charAt(0)}\n            </Avatar>\n          </IconButton>\n\n          {renderProfileMenu}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeft />\n          </IconButton>\n        </div>\n\n        <Divider />\n\n        <List>\n          <ListItem button onClick={handleDashboardClick}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n\n          <ListItem button onClick={handleME}>\n            <ListItemIcon>\n              <Person />\n            </ListItemIcon>\n            <ListItemText primary=\"Manage Employees\" />\n          </ListItem>\n\n          <ListItem button onClick={handleAddDeparmentClick}>\n            <ListItemIcon>\n              <Business />\n            </ListItemIcon>\n            <ListItemText primary=\"Manage Department\" />\n          </ListItem>\n\n          <ListItem button onClick={handleML}>\n            <ListItemIcon>\n              <FontAwesomeIcon icon={faLeaf}></FontAwesomeIcon>\n            </ListItemIcon>\n            <ListItemText primary=\"Manage Leave Type\" />\n          </ListItem>\n          <ListItem button onClick={handleViewLeaveCalendar}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"View Leave Calendar\" />\n          </ListItem>\n          <ListItem button onClick={handleReportGenerationClick}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"Report Generation\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <ListItem button onClick={handleAddManagerClick}>\n          <ListItemIcon>\n            <Person />\n          </ListItemIcon>\n          <ListItemText primary=\"Add Manager\" />\n        </ListItem>\n        <Dialog open={open2} onClose={handleClose}>\n          <Box\n            sx={{\n              width: 600,\n              paddingBottom: 2,\n              paddingLeft: 1,\n              paddingRight: 1,\n            }}\n          >\n            <DialogTitle>Add Manager</DialogTitle>\n            <DialogContent>\n              <form>\n                <Stack spacing={3}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                    }}\n                  >\n                    <TextField\n                      id=\"manager_first_name\"\n                      type=\"text\"\n                      variant=\"standard\"\n                      label=\"First Name\"\n                      style={{ marginRight: 15 }}\n                      value={firstName}\n                      onChange={handleChange}\n                    />\n                    <TextField\n                      id=\"manager_last_name\"\n                      type=\"text\"\n                      variant=\"standard\"\n                      label=\"Last Name\"\n                      value={lastName}\n                      onChange={handleChange}\n                    />\n                  </div>\n                  <TextField\n                    id=\"manager_username\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"standard\"\n                    label=\"Manager Username\"\n                    value={username}\n                    onChange={handleChange}\n                  />\n                  <TextField\n                    id=\"manager_id\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"standard\"\n                    label=\"Manager ID\"\n                    value={empID}\n                    onChange={handleChange}\n                  />\n                  <TextField\n                    id=\"manager_department_code\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"standard\"\n                    label=\"Manager Department\"\n                    value={department}\n                    onChange={handleChange}\n                  />\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      label=\"Date of Birth\"\n                      value={value}\n                      onChange={(newValue) => {\n                        setValue(newValue);\n                      }}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      label=\"Joining Date\"\n                      value={joiningDate}\n                      onChange={(newValue) => {\n                        setJoiningDate(newValue);\n                      }}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                  <TextField\n                    id=\"manager_number\"\n                    type=\"tel\"\n                    fullWidth\n                    variant=\"standard\"\n                    label=\"Manager Phone Number\"\n                    value={phoneNumber}\n                    onChange={handleChange}\n                  />\n                  <Divider />\n                  <Typography>Address</Typography>\n                  <TextField\n                    id=\"manager_flat\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"standard\"\n                    label=\"Flat, House no., Building, Company, Apartment\"\n                    value={flat}\n                    onChange={handleChange}\n                  />\n                  <TextField\n                    id=\"manager_town\"\n                    type=\"text\"\n                    fullWidth\n                    variant=\"standard\"\n                    label=\"Town/City\"\n                    value={town}\n                    onChange={handleChange}\n                  />\n                  <FormControl sx={{ m: 1, minWidth: 120 }}>\n                    <InputLabel id=\"state-helper-label\">State</InputLabel>\n                    <Select\n                      labelId=\"state-helper-label\"\n                      id=\"state-helper\"\n                      value={state}\n                      label=\"State\"\n                      onChange={handleChange}\n                    >\n                      {/* <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem> */}\n                      {getStates(\"in\").map((state, idx) => {\n                        return <MenuItem value={state}>{state}</MenuItem>;\n                      })}\n                    </Select>\n                  </FormControl>\n                  {/* TODO */}\n                  {/* Joining Date DatePicker */}\n                </Stack>\n              </form>\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={handleAddManager}>\n                Add\n              </Button>\n              <Button color=\"error\" onClick={handleClose}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </Box>\n        </Dialog>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer}>\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <ProtectedRoute path=\"/admin\" exact>\n              <Grid container spacing={3} justifyContent=\"space-around\">\n                <Grid item xs={12} md={4} lg={3}>\n                  {/* Total NUmber of Employees */}\n                  <Card style={{ textAlign: \"center\" }}>\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Number of Employees\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {numOfEmployees !== null ? (\n                          numOfEmployees\n                        ) : (\n                          <Gutter w=\"30px\" h=\"30px\" ml=\"110px\" mt=\"3.2px\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                  <Card style={{ textAlign: \"center\" }}>\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Number of Departments\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {numOfDepartments !== null ? (\n                          numOfDepartments\n                        ) : (\n                          <Gutter w=\"30px\" h=\"30px\" ml=\"110px\" mt=\"3.2px\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={4} lg={4}>\n                  <Card style={{ textAlign: \"center\" }}>\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Number of Leave Types\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {numOfLeaveTypes !== null ? (\n                          numOfLeaveTypes\n                        ) : (\n                          <Gutter w=\"30px\" h=\"30px\" ml=\"160px\" />\n                        )}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={4} lg={12}>\n                  <EmployeeTable\n                    role=\"admin\"\n                    leaves={leaves}\n                    webSocket={webSocket}\n                    fetchLeaves={fetchLeaves}\n                  />\n                </Grid>\n              </Grid>\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/admin/profile\" exact>\n              <UserProfilePage />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/admin/mng-dpt\" exact>\n              <ManageDepartment fetchNumOfDepts={fetchNumOfDepts} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/admin/mng-leave-type\" exact>\n              <ManageLeaveType fetchNumOfLeaveTypes={fetchNumOfLeaveTypes} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/admin/mng-emp\" exact>\n              <ManageEmployee\n                fetchNumOfEmployees={fetchNumOfEmployees}\n                fetchLeaves={fetchLeaves}\n              />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/admin/settings\" exact>\n              <SettingsPage role=\"admin\" />\n            </ProtectedRoute>\n            <Route path=\"/admin/change-password\" exact>\n              <ChangePassword />\n            </Route>\n            <Route path=\"/admin/leave-calendar\" exact>\n              <LeaveCalendar leaves={allLeaves} />\n            </Route>\n            <Route path=\"/admin/report-generation\" exact>\n              <ReportGeneration />\n            </Route>\n          </Container>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { useAuthDispatch, useAuthState } from \"../context\";\nimport {\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  TableFooter,\n  TablePagination,\n  TableContainer,\n  Paper,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Typography,\n  Button,\n} from \"@mui/material\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Close, HourglassBottom, Done } from \"@mui/icons-material\";\nimport { updateUser } from \"../context/actions\";\n\nfunction LeavesTable({ leaves, fetchLeaves, webSocket }) {\n  let dispatch = useAuthDispatch();\n  let { user } = useAuthState();\n\n  useEffect(() => {}, [leaves]);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [open, setOpen] = useState(false);\n  const [cancelLeaveID, setCancelLeaveID] = useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleCancelLeave = () => {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: user.username,\n        leave_id: cancelLeaveID,\n      }),\n    };\n\n    fetch(\"http://127.0.0.1:8000/leaves/delete-leave/\", requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        webSocket.send(\n          JSON.stringify({\n            action: \"UPDATE\",\n            admin: true,\n            employee: false,\n            manager: false,\n          })\n        );\n        updateUser(dispatch, { username: user.username });\n        fetchLeaves();\n        setOpen(false);\n      });\n  };\n\n  return (\n    <TableContainer component={Paper} sx={{ marginTop: 5 }}>\n      <Table style={{ minWidth: \"500px\" }}>\n        <TableHead>\n          <TableRow>\n            <TableCell style={{ fontWeight: \"bolder\" }}>S. No.</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }} align=\"left\">\n              Leave ID\n            </TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Leave Type</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Applied On</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>From</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>To</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Admin</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Manager</TableCell>\n            <TableCell style={{ fontWeight: \"bolder\" }}>Cancel</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? leaves.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : leaves\n          ).map((leave, idx) => (\n            <TableRow key={leave.id}>\n              <TableCell>{idx + 1}</TableCell>\n              <TableCell>{leave.id}</TableCell>\n              <TableCell>{leave.leave_type}</TableCell>\n              <TableCell>{leave.applied_on.substr(0, 10)}</TableCell>\n              <TableCell>{leave.from_date}</TableCell>\n              <TableCell>{leave.to_date}</TableCell>\n              <TableCell style={{ paddingLeft: \"25px\" }}>\n                {leave.waiting_approval ? (\n                  <HourglassBottom color=\"warning\" />\n                ) : leave.admin_approved ? (\n                  <Done color=\"success\" />\n                ) : (\n                  <Close color=\"error\" />\n                )}\n              </TableCell>\n              <TableCell style={{ paddingLeft: \"32px\" }}>\n                {leave.waiting_approval ? (\n                  <HourglassBottom color=\"warning\" />\n                ) : !leave.admin_approved ? (\n                  <Close color=\"error\" />\n                ) : leave.manager_rejected ? (\n                  <Close color=\"error\" />\n                ) : leave.manager_approved ? (\n                  <Done color=\"success\" />\n                ) : (\n                  <HourglassBottom color=\"warning\" />\n                )}\n              </TableCell>\n              <TableCell>\n                <IconButton\n                  color=\"error\"\n                  onClick={() => {\n                    setCancelLeaveID(leave.id);\n                    setOpen(true);\n                  }}\n                  disabled={!leave.waiting_approval}\n                >\n                  <CancelIcon />\n                </IconButton>\n                <Dialog\n                  open={open}\n                  onClose={() => {\n                    setOpen(false);\n                  }}\n                >\n                  <IconButton\n                    disableRipple\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <Close\n                      fontSize=\"small\"\n                      sx={{\n                        marginLeft: 43.9,\n                        // marginTop: 0.5,\n                      }}\n                    />\n                  </IconButton>\n                  <DialogTitle>\n                    <Typography>\n                      Do you want to cancel the Leave Application?\n                    </Typography>\n                  </DialogTitle>\n                  <DialogActions>\n                    <Button color=\"error\" onClick={handleCancelLeave}>\n                      Cancel\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, { label: \"All\", value: -1 }]}\n              count={leaves.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              onPageChange={handleChangePage}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default LeavesTable;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  CssBaseline,\n  Drawer,\n  Divider,\n  List,\n  Container,\n  ListItem,\n  Grid,\n  Card,\n  CardContent,\n  DialogContent,\n} from \"@material-ui/core\";\nimport { IconButton, Badge } from \"@mui/material\";\nimport {\n  Settings,\n  ExitToApp,\n  ChevronLeft,\n  Dashboard,\n  Notifications,\n} from \"@material-ui/icons\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport clsx from \"clsx\";\n// import EmployeeTable from \"./EmployeeTable\";\nimport UserProfilePage from \"./UserProfilePage\";\n// import ManageDepartment from \"./ManageDepartment\";\nimport SettingsPage from \"./SettingsPage\";\n// import ManageLeaveType from \"./ManageLeaveType\";\n// import ManageEmployee from \"./ManageEmployee\";\nimport { logout, useAuthDispatch, useAuthState } from \"../context\";\nimport NotificationsMenu from \"./NotificationsMenu\";\nimport useDocumentTitle from \"./useDocumentTitle\";\nimport LeavesTable from \"./LeavesTable\";\nimport {\n  Box,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Stack,\n  TextField,\n  Select,\n  InputLabel,\n  FormControl,\n  Button,\n  Paper,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { getStates } from \"country-state-picker\";\nimport { updateUser } from \"../context/actions\";\nimport ChangePassword from \"./ChangePassword\";\n\nimport DatePicker2 from \"sassy-datepicker\";\nimport LeaveCalendar from \"./LeaveCalendar\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    // paddingTop: theme.spacing(4),\n    // paddingBottom: theme.spacing(4),\n    marginTop: \"120px\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  menuStyle: {\n    marginTop: \"40px\",\n  },\n}));\n\nlet webSocket, autoLogoutWebSocket;\n\nfunction EmployeeDashboard(props) {\n  useDocumentTitle(\"ELMS   |   Employee\");\n\n  let history = useHistory();\n  let dispatch = useAuthDispatch();\n\n  const { user } = useAuthState();\n\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(true);\n  const [open2, setOpen2] = useState(false);\n  const [openTAL, setOpenTAL] = useState(false);\n  const [openTLAM, setOpenTLAM] = useState(false);\n  const [openTLAY, setOpenTLAY] = useState(false);\n  const [notifications, setNotifications] = useState(3);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n  const [isNotificationsOpen, setIsNotificationsOpen] = useState(false);\n  const [notificationsAnchorEl, setNotificaionsAnchorEl] = useState(false);\n  const [admin, setAdmin] = useState(\"\");\n  const [manager, setManager] = useState(\"\");\n  const [leaveType, setLeaveType] = useState(\"\");\n  const [leaveTypes, setLeaveTypes] = useState([]);\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  const [purpose, setPurpose] = useState(\"\");\n  const [town, setTown] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [leaves, setLeaves] = useState([]);\n  // let webSocket;\n\n  useEffect(() => {\n    getAssignedNames();\n    fetchLeaveTypes();\n    fetchLeaves();\n    webSocket = new WebSocket(\"ws://127.0.0.1:8000/ws/update-user\");\n    autoLogoutWebSocket = new WebSocket(\"ws://127.0.0.1:8000/ws/delete-user\");\n    webSocket.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      if (data.action === \"UPDATE\") {\n        if (data.employee) {\n          fetchLeaves();\n        }\n      } else if (data.action === \"LOGOUT\")\n        logout(dispatch, { username: user.username, webSocket: webSocket });\n    };\n    webSocket.onclose = function (e) {\n      console.error(\"Chat socket closed unexpectedly\");\n    };\n  }, []);\n\n  const fetchLeaves = () => {\n    fetch(`http://127.0.0.1:8000/leaves/get-leaves/${user.username}/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setLeaves([...data]);\n      });\n  };\n\n  const handlePurposeChange = (e) => {\n    setPurpose(e.target.value);\n  };\n\n  const handleLeaveTypeChange = (e) => {\n    setLeaveType(e.target.value);\n  };\n\n  const fetchLeaveTypes = () => {\n    fetch(\n      `http://127.0.0.1:8000/leave-types/get-leave-type-${\n        user.contract_based ? \"contract\" : \"regular\"\n      }`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setLeaveTypes([...data]);\n      });\n  };\n\n  const getAssignedNames = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: user.username,\n      }),\n    };\n\n    fetch(\"http://127.0.0.1:8000/accounts/get-names/\", requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        setAdmin(data.admin);\n        setManager(data.manager);\n      });\n  };\n\n  const handleProfileMenuOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n    setIsMenuOpen(true);\n  };\n\n  const handleProfileMenuClose = () => {\n    setIsMenuOpen(false);\n  };\n\n  const handleNotificationsMenuClose = () => {\n    setIsNotificationsOpen(false);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  // const handleProfileClick = () => {\n  //   setIsMenuOpen(false);\n  //   history.push(\"/employee/profile\");\n  // };\n\n  const handleDashboardClick = () => {\n    history.push(\"/employee/\");\n  };\n\n  const handleLeaveApplyClick = () => {\n    setOpen2(true);\n  };\n\n  const handleViewLeaveCalendar = () => {\n    history.push(\"/employee/leave-calendar\");\n  };\n\n  const handleSettignsClick = () => {\n    setIsMenuOpen(false);\n    history.push(\"/employee/settings\");\n  };\n\n  const handleLogoutClick = async () => {\n    await logout(dispatch, { username: user.username, webSocket: webSocket });\n    webSocket.send(\n      JSON.stringify({\n        action: \"UPDATE\",\n        admin: true,\n        manager: true,\n        employee: false,\n      })\n    );\n    history.push(\"/login\");\n  };\n\n  const handleNotificationClick = (e) => {\n    e.preventDefault();\n    setNotificaionsAnchorEl(e.currentTarget);\n    setIsNotificationsOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen2(false);\n    setOpenTAL(false);\n    setOpenTLAM(false);\n    setOpenTLAY(false);\n  };\n\n  const handleChange = (event) => {\n    if (event.target.id === \"town\") setTown(event.target.value);\n    else setState(event.target.value);\n  };\n\n  const resetLeaveForm = () => {\n    setLeaveType(\"\");\n    setFromDate(null);\n    setToDate(null);\n    setPurpose(\"\");\n    setTown(\"\");\n    setState(\"\");\n  };\n\n  const handleApplyLeaveCancel = () => {\n    setOpen2(false);\n    resetLeaveForm();\n  };\n\n  const handleApplyLeave = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: user.username,\n        leave_type: leaveType,\n        admin: user.admin,\n        manager: user.manager,\n        from_date: fromDate,\n        to_date: toDate,\n        purpose: purpose,\n        address_during_leave: town + \" \" + state,\n      }),\n    };\n\n    fetch(\"http://127.0.0.1:8000/leaves/apply-leave/\", requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        updateUser(dispatch, { username: user.username });\n        fetchLeaves();\n        setOpen2(false);\n        webSocket.send(\n          JSON.stringify({\n            admin: true,\n            manager: false,\n            employee: false,\n            action: \"UPDATE\",\n          })\n        );\n      });\n  };\n\n  const renderProfileMenu = (\n    <Menu\n      className={classes.menuStyle}\n      elevation={0}\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      id=\"primary-profile-account-menu\"\n      // keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={isMenuOpen}\n      onClose={handleProfileMenuClose}\n    >\n      {/* <MenuItem onClick={handleProfileClick}>\n        <ListItemIcon>\n          <AccountCircle />\n        </ListItemIcon>\n        <ListItemText>Profile</ListItemText>\n      </MenuItem> */}\n\n      <MenuItem onClick={handleSettignsClick}>\n        <ListItemIcon>\n          <Settings />\n        </ListItemIcon>\n        <ListItemText>Settings</ListItemText>\n      </MenuItem>\n\n      <MenuItem onClick={handleLogoutClick}>\n        <ListItemIcon>\n          <ExitToApp />\n        </ListItemIcon>\n        <ListItemText>Logout</ListItemText>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            LMS Dashboard (Employee)\n          </Typography>\n\n          <IconButton\n            color=\"inherit\"\n            onClick={handleNotificationClick}\n            aria-label=\"notifications of current user\"\n            aria-controls=\"primary-profile-notifications-menu\"\n            aria-haspopup=\"true\"\n            sx={{ marginRight: 5 }}\n          >\n            {notifications === 0 ? (\n              <Notifications />\n            ) : (\n              <Badge badgeContent={notifications} color=\"primary\">\n                <Notifications />\n              </Badge>\n            )}\n          </IconButton>\n\n          <NotificationsMenu\n            open={isNotificationsOpen}\n            handleNotificationsMenuClose={handleNotificationsMenuClose}\n          />\n\n          <IconButton\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-profile-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleProfileMenuOpen}\n          >\n            <Avatar style={{ height: \"35px\", width: \"35px\" }}>\n              {user.first_name.charAt(0) + user.last_name.charAt(0)}\n            </Avatar>\n          </IconButton>\n\n          {renderProfileMenu}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeft />\n          </IconButton>\n        </div>\n\n        <Divider />\n\n        <List>\n          <ListItem button onClick={handleDashboardClick}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n          <ListItem button onClick={handleLeaveApplyClick}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"Apply Leave\" />\n          </ListItem>\n          <Dialog open={open2} onClose={handleClose}>\n            <Box\n              sx={{\n                width: 600,\n                paddingBottom: 2,\n                paddingLeft: 1,\n                paddingRight: 1,\n              }}\n            >\n              <DialogTitle>Leave Application</DialogTitle>\n              <DialogContent>\n                <form>\n                  <Stack spacing={3}>\n                    <TextField\n                      value={user.first_name + \" \" + user.last_name}\n                      label=\"Username\"\n                      disabled\n                      style={{ marginRight: 15 }}\n                      fullWidth\n                    />\n                    <div\n                      style={{\n                        display: \"flex\",\n                      }}\n                    >\n                      <TextField\n                        value={admin}\n                        label=\"Assigned Admin\"\n                        style={{ marginRight: 15 }}\n                        disabled\n                        fullWidth\n                      />\n                      <TextField\n                        value={manager}\n                        label=\"Assigned Manager\"\n                        disabled\n                        fullWidth\n                      />\n                    </div>\n                    <FormControl fullWidth required>\n                      <InputLabel id=\"leave-type-label\">Leave Type</InputLabel>\n                      <Select\n                        labelId=\"leave-type-label\"\n                        id=\"leave-type\"\n                        value={leaveType}\n                        label=\"Leave Type\"\n                        margin=\"normal\"\n                        required\n                        onChange={handleLeaveTypeChange}\n                      >\n                        {leaveTypes.map((leaveType) => (\n                          <MenuItem value={leaveType.leave_type_name}>\n                            {leaveType.leave_type_name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                    <div\n                      style={{\n                        display: \"flex\",\n                      }}\n                    >\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DatePicker\n                          label=\"From\"\n                          value={fromDate}\n                          onChange={(newValue) => {\n                            setFromDate(newValue);\n                          }}\n                          renderInput={(params) => <TextField {...params} />}\n                          style={{ marginRight: 15 }}\n                        />\n                      </LocalizationProvider>\n                      <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DatePicker\n                          label=\"To\"\n                          value={toDate}\n                          onChange={(newValue) => {\n                            setToDate(newValue);\n                          }}\n                          renderInput={(params) => <TextField {...params} />}\n                        />\n                      </LocalizationProvider>\n                    </div>\n                    <TextField\n                      multiline={true}\n                      rows={3}\n                      name=\"purpose\"\n                      label=\"Purpose for Leave\"\n                      onChange={handlePurposeChange}\n                      value={purpose}\n                    />\n                    <Divider />\n                    <Typography>Address during Leave</Typography>\n                    <TextField\n                      id=\"town\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"standard\"\n                      label=\"Town/City\"\n                      value={town}\n                      onChange={handleChange}\n                    />\n                    <FormControl sx={{ m: 1, minWidth: 120 }}>\n                      <InputLabel id=\"state-helper-label\">State</InputLabel>\n                      <Select\n                        labelId=\"state-helper-label\"\n                        id=\"state-helper\"\n                        value={state}\n                        label=\"State\"\n                        onChange={handleChange}\n                      >\n                        {getStates(\"in\").map((state, idx) => {\n                          return <MenuItem value={state}>{state}</MenuItem>;\n                        })}\n                      </Select>\n                    </FormControl>\n                  </Stack>\n                </form>\n              </DialogContent>\n              <DialogActions>\n                <Button color=\"primary\" onClick={handleApplyLeave}>\n                  Apply Leave\n                </Button>\n                <Button color=\"error\" onClick={handleApplyLeaveCancel}>\n                  Cancel\n                </Button>\n              </DialogActions>\n            </Box>\n          </Dialog>\n          <ListItem button onClick={handleViewLeaveCalendar}>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"View Leave Calendar\" />\n          </ListItem>\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer}>\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Route path=\"/employee/\" exact>\n              <Grid container spacing={3} justifyContent=\"space-around\">\n                <Grid item xs={12} md={4} lg={3}>\n                  <Card\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => {\n                      setOpenTAL(true);\n                    }}\n                  >\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Total Available Leaves\n                      </Typography>\n                      <Typography color=\"textSecondary\" variant=\"caption\">\n                        in total\n                      </Typography>\n                      <Typography\n                        variant=\"h5\"\n                        component=\"div\"\n                        color={user.leave_balance < 4 ? \"error\" : \"initial\"}\n                      >\n                        {user.leave_balance}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                  <Dialog\n                    open={openTAL}\n                    onClose={() => {\n                      setOpenTAL(false);\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: 400,\n                        paddingBottom: 3,\n                        paddingLeft: 1,\n                        paddingRight: 1,\n                      }}\n                    >\n                      <DialogTitle>Total Available Leaves</DialogTitle>\n                      <DialogContent>\n                        {leaveTypes.map((leaveType) => (\n                          <div>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                              }}\n                            >\n                              <Typography variant=\"subtitle1\">\n                                {leaveType.leave_type_name}\n                              </Typography>\n                              <Typography variant=\"subtitle1\">\n                                {leaveType.limit}\n                              </Typography>\n                            </div>\n                            <Divider />\n                          </div>\n                        ))}\n                      </DialogContent>\n                    </Box>\n                  </Dialog>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                  <Card\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => {\n                      setOpenTLAM(true);\n                    }}\n                  >\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Total Leaves Applied\n                      </Typography>\n                      <Typography color=\"textSecondary\" variant=\"caption\">\n                        this month\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {user.leaves_month}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                  <Dialog\n                    open={openTLAM}\n                    onClose={() => {\n                      setOpenTLAM(false);\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: 400,\n                        paddingBottom: 2,\n                        paddingLeft: 1,\n                        paddingRight: 1,\n                      }}\n                    >\n                      <DialogTitle>Total Leaves Applied (month)</DialogTitle>\n                      <DialogContent>\n                        {leaveTypes.map((leaveType) => (\n                          <div>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                              }}\n                            >\n                              <Typography variant=\"subtitle1\">\n                                {leaveType.leave_type_name}\n                              </Typography>\n                              <Typography variant=\"subtitle1\">\n                                {leaveType.limit}\n                              </Typography>\n                            </div>\n                            <Divider />\n                          </div>\n                        ))}\n                      </DialogContent>\n                    </Box>\n                  </Dialog>\n                </Grid>\n                <Grid item xs={12} md={4} lg={4}>\n                  <Card\n                    style={{ textAlign: \"center\" }}\n                    onClick={() => {\n                      setOpenTLAY(true);\n                    }}\n                  >\n                    <CardContent>\n                      <Typography\n                        style={{ fontSize: 16 }}\n                        color=\"textSecondary\"\n                      >\n                        Total Leaves Applied\n                      </Typography>\n                      <Typography color=\"textSecondary\" variant=\"caption\">\n                        in total\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"div\">\n                        {user.leaves_total}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                  <Dialog\n                    open={openTLAY}\n                    onClose={() => {\n                      setOpenTLAY(false);\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: 400,\n                        paddingBottom: 2,\n                        paddingLeft: 1,\n                        paddingRight: 1,\n                      }}\n                    >\n                      <DialogTitle>Total Leaves Applied (year)</DialogTitle>\n                      <DialogContent>\n                        {leaveTypes.map((leaveType) => (\n                          <div>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                              }}\n                            >\n                              <Typography variant=\"subtitle1\">\n                                {leaveType.leave_type_name}\n                              </Typography>\n                              <Typography variant=\"subtitle1\">\n                                {leaveType.limit}\n                              </Typography>\n                            </div>\n                            <Divider />\n                          </div>\n                        ))}\n                      </DialogContent>\n                    </Box>\n                  </Dialog>\n                </Grid>\n                <Grid item xs={12} md={4} lg={12}>\n                  <LeavesTable\n                    leaves={leaves}\n                    fetchLeaves={fetchLeaves}\n                    webSocket={webSocket}\n                  />\n                </Grid>\n              </Grid>\n            </Route>\n            <Route path=\"/employee/profile\" exact>\n              <UserProfilePage />\n            </Route>\n            <Route path=\"/employee/settings\" exact>\n              <SettingsPage role=\"employee\" />\n            </Route>\n            <Route path=\"/employee/change-password\" exact>\n              <ChangePassword />\n            </Route>\n            <Route path=\"/employee/leave-calendar\" exact>\n              <LeaveCalendar leaves={leaves} />\n            </Route>\n          </Container>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default EmployeeDashboard;\n","import {\n  Button,\n  CssBaseline,\n  TextField,\n  Link,\n  Box,\n  Typography,\n  Container,\n  Snackbar,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { InputLabel, Select, MenuItem, FormControl } from \"@mui/material\";\nimport { loginUser, useAuthState, useAuthDispatch } from \"../context\";\nimport useDocumentTitle from \"./useDocumentTitle\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        IIT Goa ELMS\n      </Link>{\" \"}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nlet webSocket;\n\nfunction LoginPage(props) {\n  useDocumentTitle(\"Login\");\n  const CSRFToken = () => {\n    return <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />;\n  };\n  const csrftoken = Cookies.get(\"csrftoken\");\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useAuthDispatch();\n  const { loading, errorMessage } = useAuthState();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [role, setRole] = useState(\"\");\n\n  useEffect(() => {\n    webSocket = new WebSocket(\"ws://127.0.0.1:8000/ws/update-user\");\n    webSocket.onclose = function (e) {\n      console.error(\"Chat socket closed unexpectedly\");\n    };\n  }, []);\n\n  const handleSubmitButton = async (e) => {\n    e.preventDefault();\n\n    const payload = { username, password, role };\n\n    try {\n      let response = await loginUser(dispatch, payload);\n      if (!response.user) {\n        setOpen(true);\n        return;\n      }\n      if (response.user.is_employee) {\n        // Update the Dashboard of Admin and Employee when an Employee\n        // logs in, to show the online symbol for that Employee\n        webSocket.send(\n          JSON.stringify({\n            action: \"UPDATE\",\n            employee: false,\n            admin: true,\n            manager: true,\n          })\n        );\n        // After updating the dashboard of Admin and Manager, we navigate to url '/employee'\n        history.push(\"/employee\");\n      } else if (response.user.is_admin) history.push(\"/admin\");\n      else history.push(\"/manager\");\n    } catch (error) {\n      console.log(error + \" here\");\n    }\n  };\n  const handleSnackbarClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (e) => {\n    if (e.target.id === \"username\") setUsername(e.target.value);\n    else setPassword(e.target.value);\n  };\n  const handleRoleChange = (e) => {\n    setRole(e.target.value);\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <img\n            src=\"https://upload.wikimedia.org/wikipedia/en/thumb/a/a7/Indian_Institute_of_Technology_Goa_Logo.svg/1200px-Indian_Institute_of_Technology_Goa_Logo.svg.png\"\n            alt=\"\"\n            height={150}\n            width={150}\n          />\n          <Typography component=\"h1\" variant=\"h5\">\n            ELMS Sign In\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            method=\"POST\"\n            action=\"/login\"\n          >\n            <CSRFToken />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={handleChange}\n            />\n            <FormControl fullWidth required>\n              <InputLabel id=\"role-label\">Role</InputLabel>\n              <Select\n                labelId=\"role-label\"\n                id=\"role\"\n                value={role}\n                label=\"Role\"\n                onChange={handleRoleChange}\n                margin=\"normal\"\n                required\n              >\n                <MenuItem value={0}>Employee</MenuItem>\n                <MenuItem value={1}>Admin</MenuItem>\n                <MenuItem value={2}>Manager</MenuItem>\n              </Select>\n            </FormControl>\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmitButton}\n              disabled={loading}\n            >\n              Sign In\n            </Button>\n            {/* <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n            </Grid> */}\n          </form>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n        <Snackbar\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n          open={open}\n          onClose={handleSnackbarClose}\n          key={\"topcenter\"}\n          autoHideDuration={2000}\n        >\n          <Alert\n            variant=\"filled\"\n            severity=\"error\"\n            onClose={handleSnackbarClose}\n          >\n            {errorMessage}\n          </Alert>\n        </Snackbar>\n      </Container>\n      )\n    </>\n  );\n}\n\nexport default LoginPage;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport ManagerDashboard from \"./components/ManagerDashboard\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport EmployeeDashboard from \"./components/EmployeeDashboard\";\nimport LoginPage from \"./components/LoginPage\";\nimport { useAuthState, useAuthDispatch } from \"./context\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\n\nfunction App() {\n  let { user } = useAuthState();\n  let dispatch = useAuthDispatch();\n  let leaveTypes = [];\n\n  useEffect(() => {\n    window.addEventListener(\"storage\", (e) => {\n      if (!e.user) dispatch({ type: \"LOGOUT\" });\n    });\n    // fetchLeaveTypes();\n  }, []);\n\n  const fetchLeaveTypes = () => {\n    fetch(\"http://127.0.0.1:8000/leave-types/add-leave-type\")\n      .then((response) => response.json())\n      .then((data) => {\n        // setLeaveTypes([...data]);\n        leaveTypes = data;\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Route path=\"/login\" exact>\n          {user ? (\n            user.is_employee ? (\n              <Redirect to=\"/employee\" />\n            ) : user.is_manager ? (\n              <Redirect to=\"/manager\" />\n            ) : (\n              <Redirect to=\"/admin\" />\n            )\n          ) : (\n            <LoginPage />\n          )}\n        </Route>\n        <ProtectedRoute path=\"/\" exact>\n          {user ? (\n            user.is_employee ? (\n              <Redirect to=\"/employee\" />\n            ) : user.is_manager ? (\n              <Redirect to=\"/manager\" />\n            ) : (\n              <Redirect to=\"/admin\" />\n            )\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/manager\">\n          {user ? (\n            user.is_manager ? (\n              <ManagerDashboard />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/admin\">\n          {user ? (\n            user.is_admin ? (\n              <AdminDashboard />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/employee\">\n          {user ? (\n            user.is_employee ? (\n              <EmployeeDashboard leaveTypes={leaveTypes} />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </ProtectedRoute>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}